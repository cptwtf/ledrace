#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_SSD1306.h> //Display Libary
#include <Adafruit_GFX.h>
#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
  #include <avr/power.h>
#endif


#define PIN               10     //LED Strip data pin
#define PLAYERONEBUTTONPIN   13  // Player 1 Controller Input Pin
#define PLAYERTWOBUTTONPIN 2     // Player 2 Controller Input Pin
#define PLAYERTHREEBUTTONPIN 4  // Player 3 Controller Input Pin
#define NUMPIXELS         233   // LED Count
#define NUMLAPS           3     // Lap Count
#define SCREEN_WIDTH      128 // Set OLED display width, in pixels
#define SCREEN_HEIGHT     64 // Set LED display height, in pixels

//create neopixel object
Adafruit_NeoPixel pixels(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);
Adafruit_SSD1306 display2(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

/*////////Menu stuff start/////////*/
const int buttonA = 33; const int buttonB = 26; const int buttonC = 25;
int readingA; int readingB; int readingC;
int buttonStateA; int buttonStateB; int buttonStateC;
int lastButtonStateA = LOW; int lastButtonStateB = LOW; int lastButtonStateC = LOW;
unsigned long lastDebounceTime = 0;
unsigned long debounceDelay = 500;
bool gamestate = false; // gamestatus
bool multiplayer = false;
bool thirdPlayer = false;
bool menuColorChosen = false;
byte menuPlayerOneColor[3];
byte menuPlayerTwoColor[3];
byte n ; byte m ; byte w ; bool s = 1;// menüstatevariablen
float g = 100; int r = 11; float rz = 5; float g2 = 200; int r2 = 21; float rz2 = 15; //Spielermenüdaten


//declaring prototype functions because arduino ide compiler doesnt care about order but gcc does
//and this was quicker and less error prone then reordering the menu code :p
void display1setup();
void display2setup();
void player1screen();
void player2screen();
void display12idle();
void display1menue();
void resetcount();
void resetcount2();
void abfrage0();
void abfrage();
void abfrage2();
void abfrage3();
void abfrage4();
void resets();
void changeColors(String colorPlayerOne, String colorPlayerTwo);

//following are _a lot_ of lines of pixelart bitmap arrays, jump to code line 1872 to skip
// Speicherung der MenueBilder im Array pixel fuer pixel
static const uint8_t pixelartbztg[1024] = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00,
  0x3c, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00,
  0x22, 0x02, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00,
  0x22, 0xfb, 0x9e, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00,
  0x3e, 0x12, 0x12, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00,
  0x21, 0x22, 0x12, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00,
  0x21, 0x42, 0x12, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00,
  0x3e, 0xfb, 0x9e, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00,
  0x3e, 0x42, 0x00, 0x06, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00,
  0x22, 0x42, 0x00, 0x04, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00,
  0x22, 0x4e, 0x79, 0xe7, 0x92, 0x37, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x22, 0x52, 0x49, 0x24, 0x52, 0x44, 0x81, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00,
  0x22, 0x52, 0x79, 0x24, 0x52, 0x44, 0x83, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x01,
  0x22, 0x52, 0x41, 0x24, 0x52, 0x44, 0x83, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x0f,
  0x3e, 0x5e, 0x79, 0x27, 0x9e, 0x47, 0x87, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x0f, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x0f, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x1f, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xf8, 0x03, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8,
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static const uint8_t fertigmenuart1[1024] ={
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x41, 0xe5, 0x1c, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x71, 0x26, 0x88, 0x92, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x41, 0x24, 0x08, 0x92, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x41, 0xe4, 0x08, 0x9e, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x08, 0x82, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x41, 0xe4, 0x08, 0x9e, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x80, 0x01, 0x00, 0x09, 0x00, 0x80, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0x00, 0x09, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0x00, 0x0d, 0x3c, 0x10, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x0f, 0x00, 0x00, 0x80, 0x01, 0x00, 0x0f, 0x24, 0x9e, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0x00, 0x0f, 0x24, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0x00, 0x0b, 0x3c, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x09, 0x09, 0x00, 0x00, 0x80, 0x01, 0x00, 0x09, 0x20, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x06, 0x09, 0x00, 0x00, 0x80, 0x01, 0x00, 0x09, 0x3c, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static const uint8_t fertigmenuart2[1024] ={
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x41, 0xe5, 0x1c, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x71, 0x26, 0x88, 0x92, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x41, 0x24, 0x08, 0x92, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x41, 0xe4, 0x08, 0x9e, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x08, 0x82, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x41, 0xe4, 0x08, 0x9e, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xf0, 0xf0, 0xff, 0xff, 0x80, 0x01, 0x00, 0x09, 0x00, 0x80, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xfe, 0xf6, 0xff, 0xff, 0x80, 0x01, 0x00, 0x09, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xfe, 0xf6, 0xff, 0xff, 0x80, 0x01, 0x00, 0x0d, 0x3c, 0x10, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xfe, 0xf0, 0xff, 0xff, 0x80, 0x01, 0x00, 0x0f, 0x24, 0x9e, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xfe, 0xf6, 0xff, 0xff, 0x80, 0x01, 0x00, 0x0f, 0x24, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xfe, 0xf6, 0xff, 0xff, 0x80, 0x01, 0x00, 0x0b, 0x3c, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xf6, 0xf6, 0xff, 0xff, 0x80, 0x01, 0x00, 0x09, 0x20, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xf9, 0xf6, 0xff, 0xff, 0x80, 0x01, 0x00, 0x09, 0x3c, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static const uint8_t fertigmenuart3[1024] ={
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x41, 0xe5, 0x1c, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x71, 0x26, 0x88, 0x92, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x41, 0x24, 0x08, 0x92, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x41, 0xe4, 0x08, 0x9e, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x08, 0x82, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x41, 0xe4, 0x08, 0x9e, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf6, 0xff, 0x7f, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf6, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf2, 0xc3, 0xef, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x0f, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf0, 0xdb, 0x61, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf0, 0xdb, 0x6d, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf4, 0xc3, 0x6d, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x09, 0x09, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf6, 0xdf, 0x6d, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x06, 0x09, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf6, 0xc3, 0x6d, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static const uint8_t menuart1[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
};

static const uint8_t menuart2[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x20, 0x03, 0xc0, 0x20, 0x10, 0x00, 0x00, 0x10, 0x08, 0x00, 0xf0, 0x08, 0x04, 0x00, 0x00, 0x04,
  0x21, 0xe2, 0x40, 0x00, 0x10, 0x00, 0x1e, 0x10, 0x08, 0x00, 0x90, 0x00, 0x04, 0x00, 0x07, 0x84,
  0x22, 0xd2, 0x0f, 0x07, 0x93, 0xc8, 0x2d, 0x10, 0x08, 0x00, 0x83, 0xc1, 0xe4, 0xf2, 0x0b, 0x44,
  0x23, 0xf3, 0x89, 0x24, 0x92, 0x4f, 0x3f, 0x10, 0x08, 0x00, 0xe2, 0x49, 0x24, 0x93, 0xcf, 0xc4,
  0x22, 0x11, 0xc9, 0x24, 0x92, 0x49, 0x21, 0x10, 0x08, 0x00, 0x72, 0x49, 0x24, 0x92, 0x48, 0x44,
  0x22, 0x10, 0x4f, 0x27, 0x93, 0xc9, 0x21, 0x10, 0x08, 0x00, 0x13, 0xc9, 0xe4, 0xf2, 0x48, 0x44,
  0x21, 0xe2, 0x48, 0x24, 0x12, 0x09, 0x1e, 0x10, 0x08, 0x00, 0x92, 0x09, 0x04, 0x82, 0x47, 0x84,
  0x20, 0x03, 0xc8, 0x27, 0x93, 0xc9, 0x00, 0x10, 0x08, 0x00, 0xf2, 0x09, 0xe4, 0xf2, 0x40, 0x04,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x24, 0x11, 0x7c, 0x00, 0x00, 0x00, 0x06, 0x10, 0x08, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x19, 0x80, 0x60, 0x7c, 0x10, 0x08, 0x00, 0x04, 0x01, 0x40, 0x00, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x1b, 0xbc, 0xf8, 0x40, 0x10, 0x08, 0x00, 0x04, 0x81, 0x00, 0x00, 0x00, 0x04,
  0x24, 0x11, 0x7b, 0x9e, 0xe6, 0x4e, 0x40, 0x10, 0x08, 0x00, 0x04, 0xf3, 0x9f, 0x3c, 0x00, 0x04,
  0x24, 0x11, 0x43, 0x9c, 0xc1, 0x42, 0x78, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x20, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x10, 0xc1, 0x42, 0x40, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x3c, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x10, 0xe2, 0x42, 0x40, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x04, 0x00, 0x04,
  0x27, 0xdf, 0x7c, 0x30, 0xbe, 0x4e, 0x7c, 0x10, 0x08, 0x00, 0x04, 0x91, 0x1f, 0x3c, 0x00, 0x04,
  0xf0, 0x00, 0x00, 0x20, 0x0c, 0x78, 0x40, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
};

static const uint8_t menuart3[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x3f, 0xfc, 0x3f, 0xdf, 0xef, 0xff, 0xff, 0xf0, 0x08, 0x00, 0xf0, 0x08, 0x04, 0x00, 0x00, 0x04,
  0x3e, 0x1d, 0xbf, 0xff, 0xef, 0xff, 0xe1, 0xf0, 0x08, 0x00, 0x90, 0x00, 0x04, 0x00, 0x07, 0x84,
  0x3d, 0x2d, 0xf0, 0xf8, 0x6c, 0x37, 0xd2, 0xf0, 0x08, 0x00, 0x83, 0xc1, 0xe4, 0xf2, 0x0b, 0x44,
  0x3c, 0x0c, 0x76, 0xdb, 0x6d, 0xb0, 0xc0, 0xf0, 0x08, 0x00, 0xe2, 0x49, 0x24, 0x93, 0xcf, 0xc4,
  0x3d, 0xee, 0x36, 0xdb, 0x6d, 0xb6, 0xde, 0xf0, 0x08, 0x00, 0x72, 0x49, 0x24, 0x92, 0x48, 0x44,
  0x3d, 0xef, 0xb0, 0xd8, 0x6c, 0x36, 0xde, 0xf0, 0x08, 0x00, 0x13, 0xc9, 0xe4, 0xf2, 0x48, 0x44,
  0x3e, 0x1d, 0xb7, 0xdb, 0xed, 0xf6, 0xe1, 0xf0, 0x08, 0x00, 0x92, 0x09, 0x04, 0x82, 0x47, 0x84,
  0x3f, 0xfc, 0x37, 0xd8, 0x6c, 0x36, 0xff, 0xf0, 0x08, 0x00, 0xf2, 0x09, 0xe4, 0xf2, 0x40, 0x04,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x24, 0x11, 0x7c, 0x00, 0x00, 0x00, 0x02, 0x10, 0x08, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x02, 0x10, 0x38, 0x7e, 0x10, 0x08, 0x00, 0x04, 0x01, 0x40, 0x00, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x03, 0x33, 0xd6, 0x40, 0x10, 0x08, 0x00, 0x04, 0x81, 0x00, 0x00, 0x00, 0x04,
  0x24, 0x11, 0x78, 0xf3, 0x22, 0x52, 0x50, 0x10, 0x08, 0x00, 0x04, 0xf3, 0x9f, 0x3c, 0x00, 0x04,
  0x24, 0x11, 0x40, 0xf2, 0xe6, 0x53, 0x70, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x20, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x02, 0xe4, 0x53, 0x40, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x3c, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x06, 0x24, 0x56, 0x40, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x04, 0x00, 0x04,
  0x27, 0xdf, 0x7c, 0x04, 0x27, 0xdc, 0x7c, 0x10, 0x08, 0x00, 0x04, 0x91, 0x1f, 0x3c, 0x00, 0x04,
  0xf0, 0x00, 0x00, 0x0c, 0x30, 0x30, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
};

static const uint8_t menuart4[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x20, 0x03, 0xc0, 0x20, 0x10, 0x00, 0x00, 0x10, 0x0f, 0xff, 0x0f, 0xf7, 0xfb, 0xff, 0xff, 0xfc,
  0x21, 0xe2, 0x40, 0x00, 0x10, 0x00, 0x1e, 0x10, 0x0f, 0xff, 0x6f, 0xff, 0xfb, 0xff, 0xf8, 0x7c,
  0x22, 0xd2, 0x0f, 0x07, 0x93, 0xc8, 0x2d, 0x10, 0x0f, 0xff, 0x7c, 0x3e, 0x1b, 0x0d, 0xf4, 0xbc,
  0x23, 0xf3, 0x89, 0x24, 0x92, 0x4f, 0x3f, 0x10, 0x0f, 0xff, 0x1d, 0xb6, 0xdb, 0x6c, 0x30, 0x3c,
  0x22, 0x11, 0xc9, 0x24, 0x92, 0x49, 0x21, 0x10, 0x0f, 0xff, 0x8d, 0xb6, 0xdb, 0x6d, 0xb7, 0xbc,
  0x22, 0x10, 0x4f, 0x27, 0x93, 0xc9, 0x21, 0x10, 0x0f, 0xff, 0xec, 0x36, 0x1b, 0x0d, 0xb7, 0xbc,
  0x21, 0xe2, 0x48, 0x24, 0x12, 0x09, 0x1e, 0x10, 0x0f, 0xff, 0x6d, 0xf6, 0xfb, 0x7d, 0xb8, 0x7c,
  0x20, 0x03, 0xc8, 0x27, 0x93, 0xc9, 0x00, 0x10, 0x0f, 0xff, 0x0d, 0xf6, 0x1b, 0x0d, 0xbf, 0xfc,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x24, 0x11, 0x7c, 0x01, 0x10, 0x30, 0x03, 0x10, 0x08, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x01, 0x30, 0x1c, 0x3e, 0x10, 0x08, 0x00, 0x04, 0x01, 0x40, 0x00, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x01, 0xb3, 0xce, 0x20, 0x10, 0x08, 0x00, 0x04, 0x81, 0x00, 0x00, 0x00, 0x04,
  0x24, 0x11, 0x79, 0xf3, 0xd6, 0x6a, 0x20, 0x10, 0x08, 0x00, 0x04, 0xf3, 0x9f, 0x3c, 0x00, 0x04,
  0x24, 0x11, 0x41, 0xf2, 0xd4, 0x2b, 0x3c, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x20, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x02, 0x14, 0x2b, 0x20, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x3c, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x06, 0x14, 0x6a, 0x20, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x04, 0x00, 0x04,
  0x27, 0xdf, 0x7c, 0x04, 0x17, 0xce, 0x3e, 0x10, 0x08, 0x00, 0x04, 0x91, 0x1f, 0x3c, 0x00, 0x04,
  0xf0, 0x00, 0x00, 0x0c, 0x11, 0xbc, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
};

static const uint8_t menuart5[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x20, 0x03, 0xc0, 0x20, 0x10, 0x00, 0x00, 0x10, 0x08, 0x00, 0xf0, 0x08, 0x04, 0x00, 0x00, 0x04,
  0x21, 0xe2, 0x40, 0x00, 0x10, 0x00, 0x1e, 0x10, 0x08, 0x00, 0x90, 0x00, 0x04, 0x00, 0x07, 0x84,
  0x22, 0xd2, 0x0f, 0x07, 0x93, 0xc8, 0x2d, 0x10, 0x08, 0x00, 0x83, 0xc1, 0xe4, 0xf2, 0x0b, 0x44,
  0x23, 0xf3, 0x89, 0x24, 0x92, 0x4f, 0x3f, 0x10, 0x08, 0x00, 0xe2, 0x49, 0x24, 0x93, 0xcf, 0xc4,
  0x22, 0x11, 0xc9, 0x24, 0x92, 0x49, 0x21, 0x10, 0x08, 0x00, 0x72, 0x49, 0x24, 0x92, 0x48, 0x44,
  0x22, 0x10, 0x4f, 0x27, 0x93, 0xc9, 0x21, 0x10, 0x08, 0x00, 0x13, 0xc9, 0xe4, 0xf2, 0x48, 0x44,
  0x21, 0xe2, 0x48, 0x24, 0x12, 0x09, 0x1e, 0x10, 0x08, 0x00, 0x92, 0x09, 0x04, 0x82, 0x47, 0x84,
  0x20, 0x03, 0xc8, 0x27, 0x93, 0xc9, 0x00, 0x10, 0x08, 0x00, 0xf2, 0x09, 0xe4, 0xf2, 0x40, 0x04,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf7, 0xdd, 0x07, 0xfe, 0xef, 0xc7, 0xfe, 0x7c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x37, 0xdd, 0x7f, 0xfe, 0xcf, 0xf9, 0xc0, 0xf0, 0x08, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x04,
  0x37, 0xdd, 0x7f, 0xfe, 0x8f, 0x19, 0xdf, 0xf0, 0x08, 0x00, 0x04, 0x01, 0x40, 0x00, 0x00, 0x04,
  0x37, 0xdd, 0x7f, 0xfe, 0xac, 0xc8, 0xdf, 0xf0, 0x08, 0x00, 0x04, 0x81, 0x00, 0x00, 0x00, 0x04,
  0x37, 0xdd, 0x7c, 0x1c, 0x29, 0xe2, 0xdf, 0xf0, 0x08, 0x00, 0x04, 0xf3, 0x9f, 0x3c, 0x00, 0x04,
  0x37, 0xdd, 0x0c, 0x1d, 0x2b, 0xf3, 0x43, 0xf0, 0x08, 0x00, 0x04, 0x91, 0x11, 0x20, 0x00, 0x04,
  0x37, 0xdd, 0x7f, 0xfd, 0xab, 0xea, 0x5f, 0xf0, 0x08, 0x00, 0x04, 0x91, 0x11, 0x3c, 0x00, 0x04,
  0x37, 0xdd, 0x7f, 0xf9, 0xe7, 0xea, 0xdf, 0xf0, 0x08, 0x00, 0x04, 0x91, 0x11, 0x04, 0x00, 0x04,
  0x37, 0xdd, 0x7f, 0xfb, 0xe7, 0xc8, 0xdf, 0xf0, 0x08, 0x00, 0x04, 0x91, 0x1f, 0x3c, 0x00, 0x04,
  0xf0, 0x41, 0x07, 0xf3, 0xe0, 0x19, 0xc0, 0xfc, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xf7, 0xef, 0xe3, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
};

static const uint8_t menuart6[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
    0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
    0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
    0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
    0x20, 0x03, 0xc0, 0x20, 0x10, 0x00, 0x00, 0x10, 0x08, 0x00, 0xf0, 0x08, 0x04, 0x00, 0x00, 0x04,
    0x21, 0xe2, 0x40, 0x00, 0x10, 0x00, 0x1e, 0x10, 0x08, 0x00, 0x90, 0x00, 0x04, 0x00, 0x07, 0x84,
    0x22, 0xd2, 0x0f, 0x07, 0x93, 0xc8, 0x2d, 0x10, 0x08, 0x00, 0x83, 0xc1, 0xe4, 0xf2, 0x0b, 0x44,
    0x23, 0xf3, 0x89, 0x24, 0x92, 0x4f, 0x3f, 0x10, 0x08, 0x00, 0xe2, 0x49, 0x24, 0x93, 0xcf, 0xc4,
    0x22, 0x11, 0xc9, 0x24, 0x92, 0x49, 0x21, 0x10, 0x08, 0x00, 0x72, 0x49, 0x24, 0x92, 0x48, 0x44,
    0x22, 0x10, 0x4f, 0x27, 0x93, 0xc9, 0x21, 0x10, 0x08, 0x00, 0x13, 0xc9, 0xe4, 0xf2, 0x48, 0x44,
    0x21, 0xe2, 0x48, 0x24, 0x12, 0x09, 0x1e, 0x10, 0x08, 0x00, 0x92, 0x09, 0x04, 0x82, 0x47, 0x84,
    0x20, 0x03, 0xc8, 0x27, 0x93, 0xc9, 0x00, 0x10, 0x08, 0x00, 0xf2, 0x09, 0xe4, 0xf2, 0x40, 0x04,
    0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
    0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
    0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
    0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
    0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
    0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
    0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0x24, 0x11, 0x7c, 0x02, 0x10, 0x00, 0x03, 0x10, 0x0f, 0xff, 0xfb, 0xff, 0x7f, 0xff, 0xff, 0xfc,
    0x24, 0x11, 0x40, 0x03, 0x73, 0x70, 0x7e, 0x10, 0x0f, 0xff, 0xfb, 0xfe, 0xbf, 0xff, 0xff, 0xfc,
    0x24, 0x11, 0x40, 0x03, 0x67, 0xbc, 0x40, 0x10, 0x0f, 0xff, 0xfb, 0x7e, 0xff, 0xff, 0xff, 0xfc,
    0x24, 0x11, 0x79, 0xf3, 0xa8, 0xa6, 0x78, 0x10, 0x0f, 0xff, 0xfb, 0x0c, 0x60, 0xc3, 0xff, 0xfc,
    0x24, 0x11, 0x41, 0xf3, 0xa8, 0xa2, 0x40, 0x10, 0x0f, 0xff, 0xfb, 0x6e, 0xee, 0xdf, 0xff, 0xfc,
    0x24, 0x11, 0x40, 0x06, 0x30, 0xa1, 0x40, 0x10, 0x0f, 0xff, 0xfb, 0x6e, 0xee, 0xc3, 0xff, 0xfc,
    0x24, 0x11, 0x40, 0x04, 0x31, 0xb3, 0x40, 0x10, 0x0f, 0xff, 0xfb, 0x6e, 0xee, 0xfb, 0xff, 0xfc,
    0x27, 0xdf, 0x7c, 0x0c, 0x3b, 0x1e, 0xf8, 0x10, 0x0f, 0xff, 0xfb, 0x6e, 0xe0, 0xc3, 0xff, 0xfc,
    0xf0, 0x00, 0x00, 0x08, 0x2e, 0xf8, 0x00, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
    0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
    0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
};

static const uint8_t menuart7[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x20, 0x03, 0xc0, 0x20, 0x10, 0x00, 0x00, 0x10, 0x08, 0x00, 0xf0, 0x08, 0x04, 0x00, 0x00, 0x04,
  0x21, 0xe2, 0x40, 0x00, 0x10, 0x00, 0x1e, 0x10, 0x08, 0x00, 0x90, 0x00, 0x04, 0x00, 0x07, 0x84,
  0x22, 0xd2, 0x0f, 0x07, 0x93, 0xc8, 0x2d, 0x10, 0x08, 0x00, 0x83, 0xc1, 0xe4, 0xf2, 0x0b, 0x44,
  0x23, 0xf3, 0x89, 0x24, 0x92, 0x4f, 0x3f, 0x10, 0x08, 0x00, 0xe2, 0x49, 0x24, 0x93, 0xcf, 0xc4,
  0x22, 0x11, 0xc9, 0x24, 0x92, 0x49, 0x21, 0x10, 0x08, 0x00, 0x72, 0x49, 0x24, 0x92, 0x48, 0x44,
  0x22, 0x10, 0x4f, 0x27, 0x93, 0xc9, 0x21, 0x10, 0x08, 0x00, 0x13, 0xc9, 0xe4, 0xf2, 0x48, 0x44,
  0x21, 0xe2, 0x48, 0x24, 0x12, 0x09, 0x1e, 0x10, 0x08, 0x00, 0x92, 0x09, 0x04, 0x82, 0x47, 0x84,
  0x20, 0x03, 0xc8, 0x27, 0x93, 0xc9, 0x00, 0x10, 0x08, 0x00, 0xf2, 0x09, 0xe4, 0xf2, 0x40, 0x04,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x20,
  0x04, 0x00, 0x00, 0x0e, 0x00, 0x01, 0xe0, 0x01, 0xfc, 0x07, 0xf8, 0xe0, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0xe0, 0x03, 0xf0, 0x03, 0xf8, 0x1f, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0xfc, 0x07, 0xf8, 0x07, 0x00, 0x3f, 0xe0, 0x7f, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x3e, 0x06, 0x18, 0x0e, 0x00, 0x38, 0x00, 0x73, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x1e, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x71, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x0e, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x70, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x1c, 0x06, 0x18, 0x18, 0x00, 0x3f, 0xe0, 0x71, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x38, 0x0f, 0xfc, 0x18, 0x00, 0x3f, 0xe0, 0x73, 0x80, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf8, 0x1c, 0x00, 0x30, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x70, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x77, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x78, 0x06, 0x18, 0x0e, 0x00, 0x38, 0x00, 0x77, 0x80, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x3c, 0x0c, 0x0c, 0x07, 0x80, 0x3f, 0xe0, 0x73, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0x9e, 0x0c, 0x0c, 0x01, 0xf8, 0x1f, 0xf0, 0xf9, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0xcf, 0x18, 0x06, 0x00, 0xfc, 0x07, 0xf8, 0xfc, 0xf0, 0x00, 0x00, 0x20,
  0x04, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x24, 0x11, 0x7c, 0x01, 0x10, 0x70, 0x02, 0x10, 0x08, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x01, 0x90, 0x1c, 0x7e, 0x10, 0x08, 0x00, 0x04, 0x01, 0x40, 0x00, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x01, 0xb3, 0x9e, 0x40, 0x10, 0x08, 0x00, 0x04, 0x81, 0x00, 0x00, 0x00, 0x04,
  0x24, 0x11, 0x78, 0xfb, 0xf6, 0xd3, 0x40, 0x10, 0x08, 0x00, 0x04, 0xf3, 0x9f, 0x3c, 0x00, 0x04,
  0x24, 0x11, 0x40, 0xfa, 0xd4, 0x51, 0x78, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x20, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x02, 0xd4, 0x49, 0x40, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x3c, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x06, 0x14, 0x4b, 0x40, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x04, 0x00, 0x04,
  0x27, 0xdf, 0x7c, 0x04, 0x17, 0x8a, 0xf8, 0x10, 0x08, 0x00, 0x04, 0x91, 0x1f, 0x3c, 0x00, 0x04,
  0xf0, 0x00, 0x00, 0x04, 0x10, 0x1c, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
};

static const uint8_t menuart8[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
 0x3f, 0xfc, 0x3f, 0xdf, 0xef, 0xff, 0xff, 0xf0, 0x08, 0x00, 0xf0, 0x08, 0x04, 0x00, 0x00, 0x04,
 0x3e, 0x1d, 0xbf, 0xff, 0xef, 0xff, 0xe1, 0xf0, 0x08, 0x00, 0x90, 0x00, 0x04, 0x00, 0x07, 0x84,
 0x3d, 0x2d, 0xf0, 0xf8, 0x6c, 0x37, 0xd2, 0xf0, 0x08, 0x00, 0x83, 0xc1, 0xe4, 0xf2, 0x0b, 0x44,
 0x3c, 0x0c, 0x76, 0xdb, 0x6d, 0xb0, 0xc0, 0xf0, 0x08, 0x00, 0xe2, 0x49, 0x24, 0x93, 0xcf, 0xc4,
 0x3d, 0xee, 0x36, 0xdb, 0x6d, 0xb6, 0xde, 0xf0, 0x08, 0x00, 0x72, 0x49, 0x24, 0x92, 0x48, 0x44,
 0x3d, 0xef, 0xb0, 0xd8, 0x6c, 0x36, 0xde, 0xf0, 0x08, 0x00, 0x13, 0xc9, 0xe4, 0xf2, 0x48, 0x44,
 0x3e, 0x1d, 0xb7, 0xdb, 0xed, 0xf6, 0xe1, 0xf0, 0x08, 0x00, 0x92, 0x09, 0x04, 0x82, 0x47, 0x84,
 0x3f, 0xfc, 0x37, 0xd8, 0x6c, 0x36, 0xff, 0xf0, 0x08, 0x00, 0xf2, 0x09, 0xe4, 0xf2, 0x40, 0x04,
 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
 0x04, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x20,
 0x04, 0x00, 0x00, 0x0e, 0x00, 0x01, 0xe0, 0x01, 0xfc, 0x07, 0xf8, 0xe0, 0x00, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x0f, 0xe0, 0x03, 0xf0, 0x03, 0xf8, 0x1f, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x07, 0xfc, 0x07, 0xf8, 0x07, 0x00, 0x3f, 0xe0, 0x7f, 0xc0, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x07, 0x3e, 0x06, 0x18, 0x0e, 0x00, 0x38, 0x00, 0x73, 0xe0, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x07, 0x1e, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x71, 0xe0, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x07, 0x0e, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x70, 0xe0, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x07, 0x1c, 0x06, 0x18, 0x18, 0x00, 0x3f, 0xe0, 0x71, 0xc0, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x07, 0x38, 0x0f, 0xfc, 0x18, 0x00, 0x3f, 0xe0, 0x73, 0x80, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf8, 0x1c, 0x00, 0x30, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x07, 0x70, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x77, 0x00, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x07, 0x78, 0x06, 0x18, 0x0e, 0x00, 0x38, 0x00, 0x77, 0x80, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x07, 0x3c, 0x0c, 0x0c, 0x07, 0x80, 0x3f, 0xe0, 0x73, 0xc0, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x0f, 0x9e, 0x0c, 0x0c, 0x01, 0xf8, 0x1f, 0xf0, 0xf9, 0xe0, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x0f, 0xcf, 0x18, 0x06, 0x00, 0xfc, 0x07, 0xf8, 0xfc, 0xf0, 0x00, 0x00, 0x20,
 0x04, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x20,
 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
 0x24, 0x11, 0x7c, 0x02, 0x60, 0x00, 0x08, 0x10, 0x08, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x04,
 0x24, 0x11, 0x40, 0x06, 0xc2, 0xf8, 0xf8, 0x10, 0x08, 0x00, 0x04, 0x01, 0x40, 0x00, 0x00, 0x04,
 0x24, 0x11, 0x40, 0x07, 0xcf, 0xac, 0x80, 0x10, 0x08, 0x00, 0x04, 0x81, 0x00, 0x00, 0x00, 0x04,
 0x24, 0x11, 0x79, 0xf5, 0x48, 0xa4, 0x80, 0x10, 0x08, 0x00, 0x04, 0xf3, 0x9f, 0x3c, 0x00, 0x04,
 0x24, 0x11, 0x41, 0xf4, 0x58, 0xa4, 0xe0, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x20, 0x00, 0x04,
 0x24, 0x11, 0x40, 0x04, 0x51, 0xa4, 0x80, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x3c, 0x00, 0x04,
 0x24, 0x11, 0x40, 0x0c, 0x5f, 0x3d, 0x80, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x04, 0x00, 0x04,
 0x27, 0xdf, 0x7c, 0x08, 0x46, 0x70, 0xf0, 0x10, 0x08, 0x00, 0x04, 0x91, 0x1f, 0x3c, 0x00, 0x04,
 0xf0, 0x00, 0x00, 0x08, 0x00, 0xc0, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
};

static const uint8_t menuart9[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x20, 0x03, 0xc0, 0x20, 0x10, 0x00, 0x00, 0x10, 0x0f, 0xff, 0x0f, 0xf7, 0xfb, 0xff, 0xff, 0xfc,
  0x21, 0xe2, 0x40, 0x00, 0x10, 0x00, 0x1e, 0x10, 0x0f, 0xff, 0x6f, 0xff, 0xfb, 0xff, 0xf8, 0x7c,
  0x22, 0xd2, 0x0f, 0x07, 0x93, 0xc8, 0x2d, 0x10, 0x0f, 0xff, 0x7c, 0x3e, 0x1b, 0x0d, 0xf4, 0xbc,
  0x23, 0xf3, 0x89, 0x24, 0x92, 0x4f, 0x3f, 0x10, 0x0f, 0xff, 0x1d, 0xb6, 0xdb, 0x6c, 0x30, 0x3c,
  0x22, 0x11, 0xc9, 0x24, 0x92, 0x49, 0x21, 0x10, 0x0f, 0xff, 0x8d, 0xb6, 0xdb, 0x6d, 0xb7, 0xbc,
  0x22, 0x10, 0x4f, 0x27, 0x93, 0xc9, 0x21, 0x10, 0x0f, 0xff, 0xec, 0x36, 0x1b, 0x0d, 0xb7, 0xbc,
  0x21, 0xe2, 0x48, 0x24, 0x12, 0x09, 0x1e, 0x10, 0x0f, 0xff, 0x6d, 0xf6, 0xfb, 0x7d, 0xb8, 0x7c,
  0x20, 0x03, 0xc8, 0x27, 0x93, 0xc9, 0x00, 0x10, 0x0f, 0xff, 0x0d, 0xf6, 0x1b, 0x0d, 0xbf, 0xfc,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x20,
  0x04, 0x00, 0x00, 0x0e, 0x00, 0x01, 0xe0, 0x01, 0xfc, 0x07, 0xf8, 0xe0, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0xe0, 0x03, 0xf0, 0x03, 0xf8, 0x1f, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0xfc, 0x07, 0xf8, 0x07, 0x00, 0x3f, 0xe0, 0x7f, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x3e, 0x06, 0x18, 0x0e, 0x00, 0x38, 0x00, 0x73, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x1e, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x71, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x0e, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x70, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x1c, 0x06, 0x18, 0x18, 0x00, 0x3f, 0xe0, 0x71, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x38, 0x0f, 0xfc, 0x18, 0x00, 0x3f, 0xe0, 0x73, 0x80, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf8, 0x1c, 0x00, 0x30, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x70, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x77, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x78, 0x06, 0x18, 0x0e, 0x00, 0x38, 0x00, 0x77, 0x80, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x3c, 0x0c, 0x0c, 0x07, 0x80, 0x3f, 0xe0, 0x73, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0x9e, 0x0c, 0x0c, 0x01, 0xf8, 0x1f, 0xf0, 0xf9, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0xcf, 0x18, 0x06, 0x00, 0xfc, 0x07, 0xf8, 0xfc, 0xf0, 0x00, 0x00, 0x20,
  0x04, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x24, 0x11, 0x7c, 0x04, 0x40, 0x60, 0x08, 0x10, 0x08, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x06, 0xc7, 0x39, 0xf8, 0x10, 0x08, 0x00, 0x04, 0x01, 0x40, 0x00, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x07, 0x4d, 0xad, 0x00, 0x10, 0x08, 0x00, 0x04, 0x81, 0x00, 0x00, 0x00, 0x04,
  0x24, 0x11, 0x79, 0xe4, 0x48, 0xa5, 0xc0, 0x10, 0x08, 0x00, 0x04, 0xf3, 0x9f, 0x3c, 0x00, 0x04,
  0x24, 0x11, 0x41, 0xe8, 0x48, 0xa5, 0x00, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x20, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x08, 0x48, 0xa5, 0x00, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x3c, 0x00, 0x04,
  0x24, 0x11, 0x40, 0x08, 0x4f, 0xad, 0x00, 0x10, 0x08, 0x00, 0x04, 0x91, 0x11, 0x04, 0x00, 0x04,
  0x27, 0xdf, 0x7c, 0x18, 0x40, 0x3b, 0xf0, 0x10, 0x08, 0x00, 0x04, 0x91, 0x1f, 0x3c, 0x00, 0x04,
  0xf0, 0x00, 0x00, 0x10, 0x00, 0x70, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
};

static const uint8_t menuart10[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x20, 0x03, 0xc0, 0x20, 0x10, 0x00, 0x00, 0x10, 0x08, 0x00, 0xf0, 0x08, 0x04, 0x00, 0x00, 0x04,
  0x21, 0xe2, 0x40, 0x00, 0x10, 0x00, 0x1e, 0x10, 0x08, 0x00, 0x90, 0x00, 0x04, 0x00, 0x07, 0x84,
  0x22, 0xd2, 0x0f, 0x07, 0x93, 0xc8, 0x2d, 0x10, 0x08, 0x00, 0x83, 0xc1, 0xe4, 0xf2, 0x0b, 0x44,
  0x23, 0xf3, 0x89, 0x24, 0x92, 0x4f, 0x3f, 0x10, 0x08, 0x00, 0xe2, 0x49, 0x24, 0x93, 0xcf, 0xc4,
  0x22, 0x11, 0xc9, 0x24, 0x92, 0x49, 0x21, 0x10, 0x08, 0x00, 0x72, 0x49, 0x24, 0x92, 0x48, 0x44,
  0x22, 0x10, 0x4f, 0x27, 0x93, 0xc9, 0x21, 0x10, 0x08, 0x00, 0x13, 0xc9, 0xe4, 0xf2, 0x48, 0x44,
  0x21, 0xe2, 0x48, 0x24, 0x12, 0x09, 0x1e, 0x10, 0x08, 0x00, 0x92, 0x09, 0x04, 0x82, 0x47, 0x84,
  0x20, 0x03, 0xc8, 0x27, 0x93, 0xc9, 0x00, 0x10, 0x08, 0x00, 0xf2, 0x09, 0xe4, 0xf2, 0x40, 0x04,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x20,
  0x04, 0x00, 0x00, 0x0e, 0x00, 0x01, 0xe0, 0x01, 0xfc, 0x07, 0xf8, 0xe0, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0xe0, 0x03, 0xf0, 0x03, 0xf8, 0x1f, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0xfc, 0x07, 0xf8, 0x07, 0x00, 0x3f, 0xe0, 0x7f, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x3e, 0x06, 0x18, 0x0e, 0x00, 0x38, 0x00, 0x73, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x1e, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x71, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x0e, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x70, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x1c, 0x06, 0x18, 0x18, 0x00, 0x3f, 0xe0, 0x71, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x38, 0x0f, 0xfc, 0x18, 0x00, 0x3f, 0xe0, 0x73, 0x80, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf8, 0x1c, 0x00, 0x30, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x70, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x77, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x78, 0x06, 0x18, 0x0e, 0x00, 0x38, 0x00, 0x77, 0x80, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x3c, 0x0c, 0x0c, 0x07, 0x80, 0x3f, 0xe0, 0x73, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0x9e, 0x0c, 0x0c, 0x01, 0xf8, 0x1f, 0xf0, 0xf9, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0xcf, 0x18, 0x06, 0x00, 0xfc, 0x07, 0xf8, 0xfc, 0xf0, 0x00, 0x00, 0x20,
  0x04, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf7, 0xdd, 0x07, 0xfd, 0xdf, 0xff, 0xff, 0xfc, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x37, 0xdd, 0x7f, 0xfd, 0xdf, 0x0f, 0xff, 0xf0, 0x08, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x04,
  0x37, 0xdd, 0x7f, 0xfd, 0x9c, 0xc6, 0xf7, 0xf0, 0x08, 0x00, 0x04, 0x01, 0x40, 0x00, 0x00, 0x04,
  0x37, 0xdd, 0x7f, 0xf9, 0xb0, 0x53, 0x07, 0xf0, 0x08, 0x00, 0x04, 0x81, 0x00, 0x00, 0x00, 0x04,
  0x37, 0xdd, 0x7c, 0x18, 0x37, 0x5b, 0x7f, 0xf0, 0x08, 0x00, 0x04, 0xf3, 0x9f, 0x3c, 0x00, 0x04,
  0x37, 0xdd, 0x0c, 0x1a, 0x37, 0x5b, 0x1f, 0xf0, 0x08, 0x00, 0x04, 0x91, 0x11, 0x20, 0x00, 0x04,
  0x37, 0xdd, 0x7f, 0xf2, 0xb7, 0x5b, 0x7f, 0xf0, 0x08, 0x00, 0x04, 0x91, 0x11, 0x3c, 0x00, 0x04,
  0x37, 0xdd, 0x7f, 0xf6, 0xb7, 0x53, 0x7f, 0xf0, 0x08, 0x00, 0x04, 0x91, 0x11, 0x04, 0x00, 0x04,
  0x37, 0xdd, 0x7f, 0xe7, 0xb6, 0x47, 0x7f, 0xf0, 0x08, 0x00, 0x04, 0x91, 0x1f, 0x3c, 0x00, 0x04,
  0xf0, 0x41, 0x07, 0xef, 0xb8, 0xce, 0x07, 0xfc, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xef, 0xbf, 0x9f, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
};

static const uint8_t menuart11[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x20, 0x03, 0xc0, 0x20, 0x10, 0x00, 0x00, 0x10, 0x08, 0x00, 0xf0, 0x08, 0x04, 0x00, 0x00, 0x04,
  0x21, 0xe2, 0x40, 0x00, 0x10, 0x00, 0x1e, 0x10, 0x08, 0x00, 0x90, 0x00, 0x04, 0x00, 0x07, 0x84,
  0x22, 0xd2, 0x0f, 0x07, 0x93, 0xc8, 0x2d, 0x10, 0x08, 0x00, 0x83, 0xc1, 0xe4, 0xf2, 0x0b, 0x44,
  0x23, 0xf3, 0x89, 0x24, 0x92, 0x4f, 0x3f, 0x10, 0x08, 0x00, 0xe2, 0x49, 0x24, 0x93, 0xcf, 0xc4,
  0x22, 0x11, 0xc9, 0x24, 0x92, 0x49, 0x21, 0x10, 0x08, 0x00, 0x72, 0x49, 0x24, 0x92, 0x48, 0x44,
  0x22, 0x10, 0x4f, 0x27, 0x93, 0xc9, 0x21, 0x10, 0x08, 0x00, 0x13, 0xc9, 0xe4, 0xf2, 0x48, 0x44,
  0x21, 0xe2, 0x48, 0x24, 0x12, 0x09, 0x1e, 0x10, 0x08, 0x00, 0x92, 0x09, 0x04, 0x82, 0x47, 0x84,
  0x20, 0x03, 0xc8, 0x27, 0x93, 0xc9, 0x00, 0x10, 0x08, 0x00, 0xf2, 0x09, 0xe4, 0xf2, 0x40, 0x04,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x20,
  0x04, 0x00, 0x00, 0x0e, 0x00, 0x01, 0xe0, 0x01, 0xfc, 0x07, 0xf8, 0xe0, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0xe0, 0x03, 0xf0, 0x03, 0xf8, 0x1f, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0xfc, 0x07, 0xf8, 0x07, 0x00, 0x3f, 0xe0, 0x7f, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x3e, 0x06, 0x18, 0x0e, 0x00, 0x38, 0x00, 0x73, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x1e, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x71, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x0e, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x70, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x1c, 0x06, 0x18, 0x18, 0x00, 0x3f, 0xe0, 0x71, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x38, 0x0f, 0xfc, 0x18, 0x00, 0x3f, 0xe0, 0x73, 0x80, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf8, 0x1c, 0x00, 0x30, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x70, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x77, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x78, 0x06, 0x18, 0x0e, 0x00, 0x38, 0x00, 0x77, 0x80, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x3c, 0x0c, 0x0c, 0x07, 0x80, 0x3f, 0xe0, 0x73, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0x9e, 0x0c, 0x0c, 0x01, 0xf8, 0x1f, 0xf0, 0xf9, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0xcf, 0x18, 0x06, 0x00, 0xfc, 0x07, 0xf8, 0xfc, 0xf0, 0x00, 0x00, 0x20,
  0x04, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x24, 0x11, 0x7c, 0x06, 0x20, 0x00, 0x08, 0x10, 0x0f, 0xff, 0xfb, 0xff, 0x7f, 0xff, 0xff, 0xfc,
  0x24, 0x11, 0x40, 0x06, 0x63, 0x7c, 0xf8, 0x10, 0x0f, 0xff, 0xfb, 0xfe, 0xbf, 0xff, 0xff, 0xfc,
  0x24, 0x11, 0x40, 0x0e, 0x6f, 0x92, 0x80, 0x10, 0x0f, 0xff, 0xfb, 0x7e, 0xff, 0xff, 0xff, 0xfc,
  0x24, 0x11, 0x7b, 0xeb, 0xc8, 0xd2, 0x80, 0x10, 0x0f, 0xff, 0xfb, 0x0c, 0x60, 0xc3, 0xff, 0xfc,
  0x24, 0x11, 0x43, 0xe9, 0xd0, 0x52, 0xf0, 0x10, 0x0f, 0xff, 0xfb, 0x6e, 0xee, 0xdf, 0xff, 0xfc,
  0x24, 0x11, 0x40, 0x19, 0x50, 0xd6, 0x80, 0x10, 0x0f, 0xff, 0xfb, 0x6e, 0xee, 0xc3, 0xff, 0xfc,
  0x24, 0x11, 0x40, 0x10, 0x51, 0x9c, 0x80, 0x10, 0x0f, 0xff, 0xfb, 0x6e, 0xee, 0xfb, 0xff, 0xfc,
  0x27, 0xdf, 0x7c, 0x10, 0x5f, 0x3b, 0xfc, 0x10, 0x0f, 0xff, 0xfb, 0x6e, 0xe0, 0xc3, 0xff, 0xfc,
  0xf0, 0x00, 0x00, 0x10, 0x00, 0x60, 0x00, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
};

static const uint8_t spielenmenuart1[1024] ={
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x07, 0x83, 0xc9, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0xc4, 0x92, 0x49, 0x27, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0xe4, 0x92, 0x49, 0x24, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x27, 0x93, 0xc9, 0xe4, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x24, 0x12, 0x09, 0x04, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0xe4, 0x13, 0xc9, 0xe4, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x80, 0x01, 0x00, 0x09, 0x00, 0x80, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0x00, 0x09, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0x00, 0x0d, 0x3c, 0x10, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x0f, 0x00, 0x00, 0x80, 0x01, 0x00, 0x0f, 0x24, 0x9e, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0x00, 0x0f, 0x24, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0x00, 0x0b, 0x3c, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x09, 0x09, 0x00, 0x00, 0x80, 0x01, 0x00, 0x09, 0x20, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x06, 0x09, 0x00, 0x00, 0x80, 0x01, 0x00, 0x09, 0x3c, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static const uint8_t spielenmenuart2[1024] ={
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x07, 0x83, 0xc9, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0xc4, 0x92, 0x49, 0x27, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0xe4, 0x92, 0x49, 0x24, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x27, 0x93, 0xc9, 0xe4, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x24, 0x12, 0x09, 0x04, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0xe4, 0x13, 0xc9, 0xe4, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xf0, 0xf0, 0xff, 0xff, 0x80, 0x01, 0x00, 0x09, 0x00, 0x80, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xfe, 0xf6, 0xff, 0xff, 0x80, 0x01, 0x00, 0x09, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xfe, 0xf6, 0xff, 0xff, 0x80, 0x01, 0x00, 0x0d, 0x3c, 0x10, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xfe, 0xf0, 0xff, 0xff, 0x80, 0x01, 0x00, 0x0f, 0x24, 0x9e, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xfe, 0xf6, 0xff, 0xff, 0x80, 0x01, 0x00, 0x0f, 0x24, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xfe, 0xf6, 0xff, 0xff, 0x80, 0x01, 0x00, 0x0b, 0x3c, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xf6, 0xf6, 0xff, 0xff, 0x80, 0x01, 0x00, 0x09, 0x20, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xf9, 0xf6, 0xff, 0xff, 0x80, 0x01, 0x00, 0x09, 0x3c, 0x92, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static const uint8_t spielenmenuart3[1024] ={
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x07, 0x83, 0xc9, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0xc4, 0x92, 0x49, 0x27, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0xe4, 0x92, 0x49, 0x24, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x27, 0x93, 0xc9, 0xe4, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x24, 0x12, 0x09, 0x04, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0xe4, 0x13, 0xc9, 0xe4, 0x80, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf6, 0xff, 0x7f, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf6, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf2, 0xc3, 0xef, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x0f, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf0, 0xdb, 0x61, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf0, 0xdb, 0x6d, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x01, 0x09, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf4, 0xc3, 0x6d, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x09, 0x09, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf6, 0xdf, 0x6d, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x06, 0x09, 0x00, 0x00, 0x80, 0x01, 0xff, 0xf6, 0xc3, 0x6d, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static const uint8_t logoart1[1024] ={
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x20,
  0x04, 0x00, 0x00, 0x0e, 0x00, 0x01, 0xe0, 0x01, 0xfc, 0x07, 0xf8, 0xe0, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0xe0, 0x03, 0xf0, 0x03, 0xf8, 0x1f, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0xfc, 0x07, 0xf8, 0x07, 0x00, 0x3f, 0xe0, 0x7f, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x3e, 0x06, 0x18, 0x0e, 0x00, 0x38, 0x00, 0x73, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x1e, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x71, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x0e, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x70, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x1c, 0x06, 0x18, 0x18, 0x00, 0x3f, 0xe0, 0x71, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x38, 0x0f, 0xfc, 0x18, 0x00, 0x3f, 0xe0, 0x73, 0x80, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf8, 0x1c, 0x00, 0x30, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x70, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x77, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x78, 0x06, 0x18, 0x0e, 0x00, 0x38, 0x00, 0x77, 0x80, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x3c, 0x0c, 0x0c, 0x07, 0x80, 0x3f, 0xe0, 0x73, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0x9e, 0x0c, 0x0c, 0x01, 0xf8, 0x1f, 0xf0, 0xf9, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0xcf, 0x18, 0x06, 0x00, 0xfc, 0x07, 0xf8, 0xfc, 0xf0, 0x00, 0x00, 0x20,
  0x04, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static const uint8_t infoart2[1024] ={
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0xc0, 0x00, 0x00, 0x80, 0x1e, 0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x0f,
  0xf0, 0xa0, 0x00, 0x00, 0x00, 0x12, 0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x08, 0x01, 0x0f,
  0xf0, 0xa3, 0xc8, 0x20, 0x00, 0x12, 0x41, 0x00, 0x04, 0xe0, 0x00, 0x00, 0x00, 0x08, 0x01, 0x0f,
  0xf0, 0x92, 0x4f, 0x3c, 0x9e, 0x1e, 0x79, 0xe7, 0xc4, 0x40, 0x00, 0x00, 0x00, 0x08, 0x61, 0x0f,
  0xf0, 0x92, 0x49, 0x24, 0x90, 0x12, 0x49, 0x24, 0x44, 0x40, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x93, 0xc9, 0x24, 0x9e, 0x12, 0x49, 0x24, 0x44, 0x40, 0x00, 0x00, 0x00, 0x09, 0xf9, 0x0f,
  0xf0, 0x92, 0x09, 0x24, 0x82, 0x12, 0x49, 0x24, 0x44, 0x40, 0x00, 0x00, 0x00, 0x0b, 0xfd, 0x0f,
  0xf0, 0xe3, 0xc9, 0x24, 0x9e, 0x12, 0x49, 0x27, 0xe4, 0x40, 0x00, 0x00, 0x00, 0x0b, 0xfd, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0xf2, 0x00, 0x02, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x82, 0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x82, 0x00, 0xa0, 0x00, 0x40, 0x90, 0x00, 0x00, 0x82, 0x80, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0xe2, 0x7c, 0xd2, 0x7c, 0x78, 0xf2, 0x4f, 0x1c, 0xf3, 0x4f, 0x80, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x82, 0x44, 0x82, 0x44, 0x48, 0x92, 0x48, 0x20, 0x92, 0x08, 0x80, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x82, 0x44, 0x82, 0x44, 0x48, 0x92, 0x4f, 0x20, 0x92, 0x08, 0x80, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x82, 0x44, 0x82, 0x44, 0x48, 0x92, 0x41, 0x20, 0x92, 0x08, 0x80, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x82, 0x7c, 0x82, 0x7e, 0x48, 0x93, 0xcf, 0x1c, 0x92, 0x0f, 0xc0, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x90, 0x00, 0x10, 0x03, 0xc0, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x90, 0x00, 0x00, 0x02, 0x40, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0xa3, 0xc0, 0x02, 0x02, 0x0f, 0x3c, 0x02, 0x08, 0x00, 0x04, 0x10, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0xc2, 0x48, 0x93, 0xc3, 0x89, 0x24, 0x72, 0x4f, 0xe7, 0xc7, 0x9e, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0xc2, 0x48, 0x92, 0x41, 0xc9, 0x24, 0x82, 0x89, 0x24, 0x44, 0x92, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0xa3, 0xc5, 0x12, 0x40, 0x4f, 0x3c, 0x83, 0x09, 0x24, 0x44, 0x92, 0x00, 0x08, 0xf1, 0x0f,
  0xf0, 0x92, 0x05, 0x12, 0x42, 0x48, 0x20, 0x82, 0x89, 0x24, 0x44, 0x92, 0x00, 0x08, 0x01, 0x0f,
  0xf0, 0x93, 0xc2, 0x12, 0x43, 0xc8, 0x3c, 0x72, 0x49, 0x27, 0xe4, 0x92, 0x00, 0x0f, 0xff, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x02, 0x25, 0xff, 0xde, 0x12, 0x00, 0x04, 0x80, 0x01, 0x20, 0x02, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x25, 0xff, 0xde, 0x12, 0x00, 0x00, 0x80, 0x01, 0x20, 0x02, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0xf2, 0x75, 0xff, 0xde, 0x22, 0x41, 0x00, 0x83, 0xc2, 0x27, 0x82, 0x50, 0x00, 0x0f, 0x0f,
  0xf0, 0x92, 0x24, 0x36, 0xc2, 0x22, 0x79, 0xe4, 0xf2, 0x42, 0x24, 0x9e, 0x69, 0xf1, 0xc9, 0x0f,
  0xf0, 0x92, 0x25, 0xb6, 0xda, 0x42, 0x49, 0x24, 0x92, 0x44, 0x24, 0x92, 0x41, 0x12, 0x09, 0x0f,
  0xf0, 0xf2, 0x25, 0xb6, 0xda, 0x42, 0x49, 0x24, 0x93, 0xc4, 0x27, 0x92, 0x41, 0x12, 0x0f, 0x0f,
  0xf0, 0x12, 0x25, 0xb6, 0xda, 0x82, 0x49, 0x24, 0x92, 0x08, 0x24, 0x12, 0x41, 0x12, 0x08, 0x0f,
  0xf0, 0xf2, 0x25, 0xb0, 0xc2, 0x82, 0x49, 0x24, 0x93, 0xc8, 0x27, 0x9e, 0x41, 0xf9, 0xcf, 0x0f,
  0xf0, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
};

static const uint8_t infoart3[1024] ={
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0xc0, 0x00, 0x00, 0x80, 0x1e, 0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x0f,
  0xf0, 0xa0, 0x00, 0x00, 0x00, 0x12, 0x01, 0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x0f,
  0xf0, 0xa3, 0xc8, 0x20, 0x00, 0x12, 0x41, 0x00, 0x04, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x0f,
  0xf0, 0x92, 0x4f, 0x3c, 0x9e, 0x1e, 0x79, 0xe7, 0xc4, 0x40, 0x00, 0x00, 0x00, 0x0f, 0x9f, 0x0f,
  0xf0, 0x92, 0x49, 0x24, 0x90, 0x12, 0x49, 0x24, 0x44, 0x40, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x93, 0xc9, 0x24, 0x9e, 0x12, 0x49, 0x24, 0x44, 0x40, 0x00, 0x00, 0x00, 0x0e, 0x07, 0x0f,
  0xf0, 0x92, 0x09, 0x24, 0x82, 0x12, 0x49, 0x24, 0x44, 0x40, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x0f,
  0xf0, 0xe3, 0xc9, 0x24, 0x9e, 0x12, 0x49, 0x27, 0xe4, 0x40, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0xf2, 0x00, 0x02, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x82, 0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x82, 0x00, 0xa0, 0x00, 0x40, 0x90, 0x00, 0x00, 0x82, 0x80, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0xe2, 0x7c, 0xd2, 0x7c, 0x78, 0xf2, 0x4f, 0x1c, 0xf3, 0x4f, 0x80, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x82, 0x44, 0x82, 0x44, 0x48, 0x92, 0x48, 0x20, 0x92, 0x08, 0x80, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x82, 0x44, 0x82, 0x44, 0x48, 0x92, 0x4f, 0x20, 0x92, 0x08, 0x80, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x82, 0x44, 0x82, 0x44, 0x48, 0x92, 0x41, 0x20, 0x92, 0x08, 0x80, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x82, 0x7c, 0x82, 0x7e, 0x48, 0x93, 0xcf, 0x1c, 0x92, 0x0f, 0xc0, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x90, 0x00, 0x10, 0x03, 0xc0, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x90, 0x00, 0x00, 0x02, 0x40, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0xa3, 0xc0, 0x02, 0x02, 0x0f, 0x3c, 0x02, 0x08, 0x00, 0x04, 0x10, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0xc2, 0x48, 0x93, 0xc3, 0x89, 0x24, 0x72, 0x4f, 0xe7, 0xc7, 0x9e, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0xc2, 0x48, 0x92, 0x41, 0xc9, 0x24, 0x82, 0x89, 0x24, 0x44, 0x92, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0xa3, 0xc5, 0x12, 0x40, 0x4f, 0x3c, 0x83, 0x09, 0x24, 0x44, 0x92, 0x00, 0x0f, 0x0f, 0x0f,
  0xf0, 0x92, 0x05, 0x12, 0x42, 0x48, 0x20, 0x82, 0x89, 0x24, 0x44, 0x92, 0x00, 0x0f, 0xff, 0x0f,
  0xf0, 0x93, 0xc2, 0x12, 0x43, 0xc8, 0x3c, 0x72, 0x49, 0x27, 0xe4, 0x92, 0x00, 0x0f, 0xff, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x02, 0x25, 0xff, 0xde, 0x12, 0x00, 0x04, 0x80, 0x01, 0x20, 0x02, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x25, 0xff, 0xde, 0x12, 0x00, 0x00, 0x80, 0x01, 0x20, 0x02, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0xf2, 0x75, 0xff, 0xde, 0x22, 0x41, 0x00, 0x83, 0xc2, 0x27, 0x82, 0x50, 0x00, 0x0f, 0x0f,
  0xf0, 0x92, 0x24, 0x36, 0xc2, 0x22, 0x79, 0xe4, 0xf2, 0x42, 0x24, 0x9e, 0x69, 0xf1, 0xc9, 0x0f,
  0xf0, 0x92, 0x25, 0xb6, 0xda, 0x42, 0x49, 0x24, 0x92, 0x44, 0x24, 0x92, 0x41, 0x12, 0x09, 0x0f,
  0xf0, 0xf2, 0x25, 0xb6, 0xda, 0x42, 0x49, 0x24, 0x93, 0xc4, 0x27, 0x92, 0x41, 0x12, 0x0f, 0x0f,
  0xf0, 0x12, 0x25, 0xb6, 0xda, 0x82, 0x49, 0x24, 0x92, 0x08, 0x24, 0x12, 0x41, 0x12, 0x08, 0x0f,
  0xf0, 0xf2, 0x25, 0xb0, 0xc2, 0x82, 0x49, 0x24, 0x93, 0xc8, 0x27, 0x9e, 0x41, 0xf9, 0xcf, 0x0f,
  0xf0, 0x00, 0x07, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
};

static const uint8_t wartenart1[1024] ={
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xf2, 0x20, 0x00, 0x08, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xf2, 0x20, 0x05, 0x1c, 0xf2, 0x0f, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xf2, 0xa7, 0xc6, 0x88, 0x93, 0xcf, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xf2, 0xa4, 0x44, 0x08, 0x92, 0x4f, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xf2, 0xa4, 0x44, 0x08, 0xf2, 0x4f, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xf2, 0xa4, 0x44, 0x08, 0x82, 0x4f, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe7, 0xe4, 0x08, 0xf2, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x20,
  0x04, 0x00, 0x00, 0x0e, 0x00, 0x01, 0xe0, 0x01, 0xfc, 0x07, 0xf8, 0xe0, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0xe0, 0x03, 0xf0, 0x03, 0xf8, 0x1f, 0xf0, 0xfe, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0xfc, 0x07, 0xf8, 0x07, 0x00, 0x3f, 0xe0, 0x7f, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x3e, 0x06, 0x18, 0x0e, 0x00, 0x38, 0x00, 0x73, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x1e, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x71, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x0e, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x70, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x1c, 0x06, 0x18, 0x18, 0x00, 0x3f, 0xe0, 0x71, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x38, 0x0f, 0xfc, 0x18, 0x00, 0x3f, 0xe0, 0x73, 0x80, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0xf0, 0x07, 0xf8, 0x1c, 0x00, 0x30, 0x00, 0x7f, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x70, 0x06, 0x18, 0x1c, 0x00, 0x30, 0x00, 0x77, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x78, 0x06, 0x18, 0x0e, 0x00, 0x38, 0x00, 0x77, 0x80, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x07, 0x3c, 0x0c, 0x0c, 0x07, 0x80, 0x3f, 0xe0, 0x73, 0xc0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0x9e, 0x0c, 0x0c, 0x01, 0xf8, 0x1f, 0xf0, 0xf9, 0xe0, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x0f, 0xcf, 0x18, 0x06, 0x00, 0xfc, 0x07, 0xf8, 0xfc, 0xf0, 0x00, 0x00, 0x20,
  0x04, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
  0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x20, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xf2, 0x20, 0x00, 0x08, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xf2, 0x20, 0x05, 0x1c, 0xf2, 0x0f, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xf2, 0xa7, 0xc6, 0x88, 0x93, 0xcf, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xf2, 0xa4, 0x44, 0x08, 0x92, 0x4f, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xf2, 0xa4, 0x44, 0x08, 0xf2, 0x4f, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xf2, 0xa4, 0x44, 0x08, 0x82, 0x4f, 0xff, 0xff, 0xff, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe7, 0xe4, 0x08, 0xf2, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static const uint8_t optionenart1[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x2e, 0x20, 0x00, 0x00, 0x00, 0x38, 0x00, 0x90, 0x0b, 0x88, 0x00, 0x00, 0x00, 0x38, 0x04, 0x84,
  0x29, 0x20, 0x00, 0x00, 0x00, 0x24, 0x00, 0x90, 0x0a, 0x48, 0x00, 0x00, 0x00, 0x40, 0x04, 0x84,
  0x29, 0x20, 0x00, 0x00, 0x00, 0x24, 0x01, 0xd0, 0x0a, 0x48, 0x00, 0x00, 0x00, 0x41, 0xe4, 0x84,
  0x2e, 0x27, 0xc4, 0x80, 0x00, 0x38, 0xf8, 0x90, 0x0b, 0x89, 0xf1, 0x20, 0x00, 0x41, 0x24, 0xf4,
  0x29, 0x24, 0x44, 0x80, 0x00, 0x28, 0x88, 0x90, 0x0a, 0x49, 0x11, 0x20, 0x00, 0x59, 0x24, 0x94,
  0x29, 0x24, 0x44, 0x80, 0x00, 0x28, 0x88, 0x90, 0x0a, 0x49, 0x11, 0x20, 0x00, 0x49, 0xe4, 0x94,
  0x29, 0x24, 0x44, 0x80, 0x00, 0x24, 0x88, 0x90, 0x0a, 0x49, 0x11, 0x20, 0x00, 0x49, 0x04, 0x94,
  0x2e, 0x27, 0xe7, 0x80, 0x00, 0x24, 0xf8, 0x90, 0x0b, 0x89, 0xf9, 0xe0, 0x00, 0x39, 0xe4, 0xf4,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x1e, 0x00, 0x88, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x12, 0x00, 0x80, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x79, 0xc0, 0x02, 0x0f, 0x40, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x48, 0x89, 0xf3, 0xc9, 0x78, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x48, 0x89, 0x12, 0x49, 0x48, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x78, 0x89, 0x12, 0x4f, 0x48, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x12, 0x40, 0x89, 0x12, 0x48, 0x48, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x1e, 0x40, 0x89, 0xf2, 0x4f, 0x48, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x2e, 0x00, 0x20, 0x00, 0x00, 0xe0, 0x12, 0x10, 0x08, 0x00, 0x00, 0x70, 0xe1, 0xc0, 0x00, 0x04,
  0x29, 0x00, 0x20, 0x00, 0x01, 0x00, 0x12, 0x10, 0x08, 0x00, 0x00, 0x89, 0x12, 0x20, 0x00, 0x04,
  0x29, 0x00, 0x70, 0x00, 0x01, 0x07, 0x92, 0x10, 0x08, 0x00, 0x00, 0x08, 0x10, 0x20, 0x00, 0x04,
  0x2e, 0x3e, 0x20, 0x00, 0x01, 0x04, 0x93, 0xd0, 0x08, 0x00, 0x00, 0x10, 0x20, 0x40, 0x00, 0x04,
  0x2a, 0x22, 0x20, 0x00, 0x01, 0x64, 0x92, 0x50, 0x08, 0x00, 0x00, 0x20, 0x40, 0x80, 0x00, 0x04,
  0x2a, 0x22, 0x20, 0x00, 0x01, 0x27, 0x92, 0x50, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x29, 0x22, 0x20, 0x00, 0x01, 0x24, 0x12, 0x50, 0x08, 0x00, 0x00, 0x20, 0x40, 0x80, 0x00, 0x04,
  0x29, 0x3e, 0x20, 0x00, 0x00, 0xe7, 0x93, 0xd0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,

};

static const uint8_t optionenart2[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x31, 0xdf, 0xff, 0xff, 0xff, 0xc7, 0xff, 0x70, 0x0b, 0x88, 0x00, 0x00, 0x00, 0x38, 0x04, 0x84,
  0x36, 0xdf, 0xff, 0xff, 0xff, 0xdb, 0xff, 0x70, 0x0a, 0x48, 0x00, 0x00, 0x00, 0x40, 0x04, 0x84,
  0x36, 0xdf, 0xff, 0xff, 0xff, 0xdb, 0xfe, 0x30, 0x0a, 0x48, 0x00, 0x00, 0x00, 0x41, 0xe4, 0x84,
  0x31, 0xd8, 0x3b, 0x7f, 0xff, 0xc7, 0x07, 0x70, 0x0b, 0x89, 0xf1, 0x20, 0x00, 0x41, 0x24, 0xf4,
  0x36, 0xdb, 0xbb, 0x7f, 0xff, 0xd7, 0x77, 0x70, 0x0a, 0x49, 0x11, 0x20, 0x00, 0x59, 0x24, 0x94,
  0x36, 0xdb, 0xbb, 0x7f, 0xff, 0xd7, 0x77, 0x70, 0x0a, 0x49, 0x11, 0x20, 0x00, 0x49, 0xe4, 0x94,
  0x36, 0xdb, 0xbb, 0x7f, 0xff, 0xdb, 0x77, 0x70, 0x0a, 0x49, 0x11, 0x20, 0x00, 0x49, 0x04, 0x94,
  0x31, 0xd8, 0x18, 0x7f, 0xff, 0xdb, 0x07, 0x70, 0x0b, 0x89, 0xf9, 0xe0, 0x00, 0x39, 0xe4, 0xf4,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x1e, 0x00, 0x88, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x12, 0x00, 0x80, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x79, 0xc0, 0x02, 0x0f, 0x40, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x48, 0x89, 0xf3, 0xc9, 0x78, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x48, 0x89, 0x12, 0x49, 0x48, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x78, 0x89, 0x12, 0x4f, 0x48, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x12, 0x40, 0x89, 0x12, 0x48, 0x48, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x1e, 0x40, 0x89, 0xf2, 0x4f, 0x48, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x2e, 0x00, 0x20, 0x00, 0x00, 0xe0, 0x12, 0x10, 0x08, 0x00, 0x00, 0x70, 0xe1, 0xc0, 0x00, 0x04,
  0x29, 0x00, 0x20, 0x00, 0x01, 0x00, 0x12, 0x10, 0x08, 0x00, 0x00, 0x89, 0x12, 0x20, 0x00, 0x04,
  0x29, 0x00, 0x70, 0x00, 0x01, 0x07, 0x92, 0x10, 0x08, 0x00, 0x00, 0x08, 0x10, 0x20, 0x00, 0x04,
  0x2e, 0x3e, 0x20, 0x00, 0x01, 0x04, 0x93, 0xd0, 0x08, 0x00, 0x00, 0x10, 0x20, 0x40, 0x00, 0x04,
  0x2a, 0x22, 0x20, 0x00, 0x01, 0x64, 0x92, 0x50, 0x08, 0x00, 0x00, 0x20, 0x40, 0x80, 0x00, 0x04,
  0x2a, 0x22, 0x20, 0x00, 0x01, 0x27, 0x92, 0x50, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x29, 0x22, 0x20, 0x00, 0x01, 0x24, 0x12, 0x50, 0x08, 0x00, 0x00, 0x20, 0x40, 0x80, 0x00, 0x04,
  0x29, 0x3e, 0x20, 0x00, 0x00, 0xe7, 0x93, 0xd0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,

};

static const uint8_t optionenart3[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x2e, 0x20, 0x00, 0x00, 0x00, 0x38, 0x00, 0x90, 0x0c, 0x77, 0xff, 0xff, 0xff, 0xc7, 0xfb, 0x7c,
  0x29, 0x20, 0x00, 0x00, 0x00, 0x24, 0x00, 0x90, 0x0d, 0xb7, 0xff, 0xff, 0xff, 0xbf, 0xfb, 0x7c,
  0x29, 0x20, 0x00, 0x00, 0x00, 0x24, 0x01, 0xd0, 0x0d, 0xb7, 0xff, 0xff, 0xff, 0xbe, 0x1b, 0x7c,
  0x2e, 0x27, 0xc4, 0x80, 0x00, 0x38, 0xf8, 0x90, 0x0c, 0x76, 0x0e, 0xdf, 0xff, 0xbe, 0xdb, 0x0c,
  0x29, 0x24, 0x44, 0x80, 0x00, 0x28, 0x88, 0x90, 0x0d, 0xb6, 0xee, 0xdf, 0xff, 0xa6, 0xdb, 0x6c,
  0x29, 0x24, 0x44, 0x80, 0x00, 0x28, 0x88, 0x90, 0x0d, 0xb6, 0xee, 0xdf, 0xff, 0xb6, 0x1b, 0x6c,
  0x29, 0x24, 0x44, 0x80, 0x00, 0x24, 0x88, 0x90, 0x0d, 0xb6, 0xee, 0xdf, 0xff, 0xb6, 0xfb, 0x6c,
  0x2e, 0x27, 0xe7, 0x80, 0x00, 0x24, 0xf8, 0x90, 0x0c, 0x76, 0x06, 0x1f, 0xff, 0xc6, 0x1b, 0x0c,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x1e, 0x00, 0x88, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x12, 0x00, 0x80, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x79, 0xc0, 0x02, 0x0f, 0x40, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x48, 0x89, 0xf3, 0xc9, 0x78, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x48, 0x89, 0x12, 0x49, 0x48, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x78, 0x89, 0x12, 0x4f, 0x48, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x12, 0x40, 0x89, 0x12, 0x48, 0x48, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x1e, 0x40, 0x89, 0xf2, 0x4f, 0x48, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x2e, 0x00, 0x20, 0x00, 0x00, 0xe0, 0x12, 0x10, 0x08, 0x00, 0x00, 0x70, 0xe1, 0xc0, 0x00, 0x04,
  0x29, 0x00, 0x20, 0x00, 0x01, 0x00, 0x12, 0x10, 0x08, 0x00, 0x00, 0x89, 0x12, 0x20, 0x00, 0x04,
  0x29, 0x00, 0x70, 0x00, 0x01, 0x07, 0x92, 0x10, 0x08, 0x00, 0x00, 0x08, 0x10, 0x20, 0x00, 0x04,
  0x2e, 0x3e, 0x20, 0x00, 0x01, 0x04, 0x93, 0xd0, 0x08, 0x00, 0x00, 0x10, 0x20, 0x40, 0x00, 0x04,
  0x2a, 0x22, 0x20, 0x00, 0x01, 0x64, 0x92, 0x50, 0x08, 0x00, 0x00, 0x20, 0x40, 0x80, 0x00, 0x04,
  0x2a, 0x22, 0x20, 0x00, 0x01, 0x27, 0x92, 0x50, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x29, 0x22, 0x20, 0x00, 0x01, 0x24, 0x12, 0x50, 0x08, 0x00, 0x00, 0x20, 0x40, 0x80, 0x00, 0x04,
  0x29, 0x3e, 0x20, 0x00, 0x00, 0xe7, 0x93, 0xd0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,

};

static const uint8_t optionenart4[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x2e, 0x20, 0x00, 0x00, 0x00, 0x38, 0x00, 0x90, 0x0b, 0x88, 0x00, 0x00, 0x00, 0x38, 0x04, 0x84,
  0x29, 0x20, 0x00, 0x00, 0x00, 0x24, 0x00, 0x90, 0x0a, 0x48, 0x00, 0x00, 0x00, 0x40, 0x04, 0x84,
  0x29, 0x20, 0x00, 0x00, 0x00, 0x24, 0x01, 0xd0, 0x0a, 0x48, 0x00, 0x00, 0x00, 0x41, 0xe4, 0x84,
  0x2e, 0x27, 0xc4, 0x80, 0x00, 0x38, 0xf8, 0x90, 0x0b, 0x89, 0xf1, 0x20, 0x00, 0x41, 0x24, 0xf4,
  0x29, 0x24, 0x44, 0x80, 0x00, 0x28, 0x88, 0x90, 0x0a, 0x49, 0x11, 0x20, 0x00, 0x59, 0x24, 0x94,
  0x29, 0x24, 0x44, 0x80, 0x00, 0x28, 0x88, 0x90, 0x0a, 0x49, 0x11, 0x20, 0x00, 0x49, 0xe4, 0x94,
  0x29, 0x24, 0x44, 0x80, 0x00, 0x24, 0x88, 0x90, 0x0a, 0x49, 0x11, 0x20, 0x00, 0x49, 0x04, 0x94,
  0x2e, 0x27, 0xe7, 0x80, 0x00, 0x24, 0xf8, 0x90, 0x0b, 0x89, 0xf9, 0xe0, 0x00, 0x39, 0xe4, 0xf4,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x1e, 0x00, 0x88, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x12, 0x00, 0x80, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x79, 0xc0, 0x02, 0x0f, 0x40, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x48, 0x89, 0xf3, 0xc9, 0x78, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x48, 0x89, 0x12, 0x49, 0x48, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x78, 0x89, 0x12, 0x4f, 0x48, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x12, 0x40, 0x89, 0x12, 0x48, 0x48, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x1e, 0x40, 0x89, 0xf2, 0x4f, 0x48, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x31, 0xff, 0xdf, 0xff, 0xff, 0x1f, 0xed, 0xf0, 0x08, 0x00, 0x00, 0x70, 0xe1, 0xc0, 0x00, 0x04,
  0x36, 0xff, 0xdf, 0xff, 0xfe, 0xff, 0xed, 0xf0, 0x08, 0x00, 0x00, 0x89, 0x12, 0x20, 0x00, 0x04,
  0x36, 0xff, 0x8f, 0xff, 0xfe, 0xf8, 0x6d, 0xf0, 0x08, 0x00, 0x00, 0x08, 0x10, 0x20, 0x00, 0x04,
  0x31, 0xc1, 0xdf, 0xff, 0xfe, 0xfb, 0x6c, 0x30, 0x08, 0x00, 0x00, 0x10, 0x20, 0x40, 0x00, 0x04,
  0x35, 0xdd, 0xdf, 0xff, 0xfe, 0x9b, 0x6d, 0xb0, 0x08, 0x00, 0x00, 0x20, 0x40, 0x80, 0x00, 0x04,
  0x35, 0xdd, 0xdf, 0xff, 0xfe, 0xd8, 0x6d, 0xb0, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0x36, 0xdd, 0xdf, 0xff, 0xfe, 0xdb, 0xed, 0xb0, 0x08, 0x00, 0x00, 0x20, 0x40, 0x80, 0x00, 0x04,
  0x36, 0xc1, 0xdf, 0xff, 0xff, 0x18, 0x6c, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,

};

static const uint8_t optionenart5[1024] ={
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x2e, 0x20, 0x00, 0x00, 0x00, 0x38, 0x00, 0x90, 0x0b, 0x88, 0x00, 0x00, 0x00, 0x38, 0x04, 0x84,
  0x29, 0x20, 0x00, 0x00, 0x00, 0x24, 0x00, 0x90, 0x0a, 0x48, 0x00, 0x00, 0x00, 0x40, 0x04, 0x84,
  0x29, 0x20, 0x00, 0x00, 0x00, 0x24, 0x01, 0xd0, 0x0a, 0x48, 0x00, 0x00, 0x00, 0x41, 0xe4, 0x84,
  0x2e, 0x27, 0xc4, 0x80, 0x00, 0x38, 0xf8, 0x90, 0x0b, 0x89, 0xf1, 0x20, 0x00, 0x41, 0x24, 0xf4,
  0x29, 0x24, 0x44, 0x80, 0x00, 0x28, 0x88, 0x90, 0x0a, 0x49, 0x11, 0x20, 0x00, 0x59, 0x24, 0x94,
  0x29, 0x24, 0x44, 0x80, 0x00, 0x28, 0x88, 0x90, 0x0a, 0x49, 0x11, 0x20, 0x00, 0x49, 0xe4, 0x94,
  0x29, 0x24, 0x44, 0x80, 0x00, 0x24, 0x88, 0x90, 0x0a, 0x49, 0x11, 0x20, 0x00, 0x49, 0x04, 0x94,
  0x2e, 0x27, 0xe7, 0x80, 0x00, 0x24, 0xf8, 0x90, 0x0b, 0x89, 0xf9, 0xe0, 0x00, 0x39, 0xe4, 0xf4,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x1e, 0x00, 0x88, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x12, 0x00, 0x80, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x79, 0xc0, 0x02, 0x0f, 0x40, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x48, 0x89, 0xf3, 0xc9, 0x78, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x48, 0x89, 0x12, 0x49, 0x48, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0x12, 0x78, 0x89, 0x12, 0x4f, 0x48, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x12, 0x40, 0x89, 0x12, 0x48, 0x48, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x1e, 0x40, 0x89, 0xf2, 0x4f, 0x48, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x2e, 0x00, 0x20, 0x00, 0x00, 0xe0, 0x12, 0x10, 0x0f, 0xff, 0xff, 0x8f, 0x1e, 0x3f, 0xff, 0xfc,
  0x29, 0x00, 0x20, 0x00, 0x01, 0x00, 0x12, 0x10, 0x0f, 0xff, 0xff, 0x76, 0xed, 0xdf, 0xff, 0xfc,
  0x29, 0x00, 0x70, 0x00, 0x01, 0x07, 0x92, 0x10, 0x0f, 0xff, 0xff, 0xf7, 0xef, 0xdf, 0xff, 0xfc,
  0x2e, 0x3e, 0x20, 0x00, 0x01, 0x04, 0x93, 0xd0, 0x0f, 0xff, 0xff, 0xef, 0xdf, 0xbf, 0xff, 0xfc,
  0x2a, 0x22, 0x20, 0x00, 0x01, 0x64, 0x92, 0x50, 0x0f, 0xff, 0xff, 0xdf, 0xbf, 0x7f, 0xff, 0xfc,
  0x2a, 0x22, 0x20, 0x00, 0x01, 0x27, 0x92, 0x50, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc,
  0x29, 0x22, 0x20, 0x00, 0x01, 0x24, 0x12, 0x50, 0x0f, 0xff, 0xff, 0xdf, 0xbf, 0x7f, 0xff, 0xfc,
  0x29, 0x3e, 0x20, 0x00, 0x00, 0xe7, 0x93, 0xd0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd,
  0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,

};
/*//////Menu stuff end///////////*/

//start/finish line
//dont put to close to strip beginning/end or write extended crossing logic :p
int startFinishLine = 10;
byte startFinishLineColorArrayRGB[] = {254,254,254};
uint32_t startFinishLineColorInteger = pixels.Color(startFinishLineColorArrayRGB[0], startFinishLineColorArrayRGB[1], startFinishLineColorArrayRGB[2]);


//game options
int playerCount = 2;
int maxLaps = NUMLAPS;



class Player {
  public:
    int LogicPosition = startFinishLine - 1;
    int DrawPosition = this->LogicPosition;
    byte ColorArrayRGB[3] = {0,0,0};
    uint32_t ColorInteger;
    float Speed = 0.0;
    float DecelerationMultiplier = 1.0;
    int buttonPin;
    bool buttonIsDown = false;
    int LapCounter = 0;
    float LapTimesArray[10] = {0,0,0,0,0,0,0,0,0,0};
    float bestLapTime = 0.0;
    bool crossedLine = false;
    unsigned long lastSpeedDecay = 0;
    bool skipSpeedDecayOnce = false;
    bool isActive = true;
    bool reachedMaxLaps = false;
    bool isTheWinner = true;
    String ColorString;

    void setColor(int R, int G, int B)
    {
      this->ColorArrayRGB[0] = R;
      this->ColorArrayRGB[1] = G;
      this->ColorArrayRGB[2] = B;
      this->ColorInteger = pixels.Color(this->ColorArrayRGB[0], this->ColorArrayRGB[1], this->ColorArrayRGB[2]);
    }
};

Player playerInstances[3];

const int MAX_SPEED = 100;
const int SPEED30PERCENT = MAX_SPEED / 100 * 30;
const int SPEED60PERCENT = MAX_SPEED / 100 * 60;
const int SPEED90PERCENT = MAX_SPEED / 100 * 90;


//"gravity" objects
//[objectNumber]
//            [start][topmost][end][intensity]
const int gravityObjectsCount = 12;
int gravityObjects[gravityObjectsCount][4] = {{9,13,13,0},{27,27,33,0}, {52,107,107,6}, {110,110,115,3}, {120,129,129,9}, {130,130,139,5}, {144,150,150,0}, {163,163,168,0}, {172,185,185,12}, {186,186,198,6}, {201,207,207,1}, {220,220,226,1} };

unsigned long menuLastLoop = 0;
const long menuLoopInterval = 128;

unsigned long lastLoop = 0;
//interval between speed decays in ms
const long speedDecayInterval = 32;
const long loopInterval = 32;

int lapFlagResetLow;
int lapFlagResetHigh;
bool finishLineHelperFlag = false;

bool gameInitDone = false;
bool inMenu = false;
bool inGame = false;
bool gameWon = false;


void setup() {
#if defined(__AVR_ATtiny85__) && (F_CPU == 16000000)
  clock_prescale_set(clock_div_1);
#endif


  //Serial.begin(9600);
  //Serial.println("debug setup");

  //menu stuff
  //Setup, Clear and BZTGLogo
  Serial.begin(115200);
  pinMode(buttonA, INPUT);
  pinMode(buttonB, INPUT);
  pinMode(buttonC, INPUT);
  display1setup();
  display2setup();
  delay(2000);
  m = 1;
  w = 1;

  //led strip stuff
  pinMode(PLAYERONEBUTTONPIN, INPUT);
  pinMode(PLAYERTWOBUTTONPIN, INPUT);
  pinMode(PLAYERTHREEBUTTONPIN, INPUT);

  pixels.begin();
  pixels.clear();
  pixels.show();

}

void initGame(int playerCount)
{
  byte mixedColorsArray[3];

  if(playerCount == 1)
  {
    //create player object and put in array
    Player player1;

    if(menuColorChosen == true)
    {
      player1.setColor(menuPlayerOneColor[0], menuPlayerOneColor[1], menuPlayerOneColor[2]);
    }
    else
    {
      player1.setColor(0, 0, 254);
      player1.ColorString = "Blau";
    }
    player1.buttonPin = PLAYERONEBUTTONPIN;
    playerInstances[0] = player1;

  }
  else if(playerCount == 2)
  {
    //create player1 object and put in array
    Player player1;


    if(menuColorChosen == true)
    {
      player1.setColor(menuPlayerOneColor[0], menuPlayerOneColor[1], menuPlayerOneColor[2]);
    }
    else
    {
      player1.setColor(0, 0, 254);
      player1.ColorString = "Blau";
    }

    player1.buttonPin = PLAYERONEBUTTONPIN;
    playerInstances[0] = player1;

    //create player2 object and put in array
    Player player2;


    if(menuColorChosen == true)
    {
      player2.setColor(menuPlayerTwoColor[0], menuPlayerTwoColor[1], menuPlayerTwoColor[2]);
    }
    else
    {
      player2.setColor(254, 0, 0);
      player2.ColorString = "Rot";
    }

    player2.buttonPin = PLAYERTWOBUTTONPIN;
    playerInstances[1] = player2;

    //mix player colors
    mixedColorsArray[0] = (playerInstances[0].ColorArrayRGB[0] + playerInstances[1].ColorArrayRGB[0]);
    mixedColorsArray[1] = (playerInstances[0].ColorArrayRGB[1] + playerInstances[1].ColorArrayRGB[1]);
    mixedColorsArray[2] = (playerInstances[0].ColorArrayRGB[2] + playerInstances[1].ColorArrayRGB[2]);

  }
  else if(playerCount == 3)
  {
    //create player1 object and put in array
    Player player1;


    if(menuColorChosen == true)
    {
      player1.setColor(menuPlayerOneColor[0], menuPlayerOneColor[1], menuPlayerOneColor[2]);
    }
    else
    {
      player1.setColor(0, 0, 254);
      player1.ColorString = "Blau";
    }

    player1.buttonPin = PLAYERONEBUTTONPIN;
    playerInstances[0] = player1;

    //create player2 object and put in array
    Player player2;


    if(menuColorChosen == true)
    {
      player2.setColor(menuPlayerTwoColor[0], menuPlayerTwoColor[1], menuPlayerTwoColor[2]);
    }
    else
    {
      player2.setColor(254, 0, 0);
      player2.ColorString = "Rot";
    }

    player2.buttonPin = PLAYERTWOBUTTONPIN;
    playerInstances[1] = player2;

    //create player3 object and put in array
    Player player3;

    player3.setColor(0, 254, 0);
    player3.ColorString = "Grün";


    player3.buttonPin = PLAYERTHREEBUTTONPIN;
    playerInstances[2] = player3;

    //mix player colors
    mixedColorsArray[0] = (playerInstances[0].ColorArrayRGB[0] + playerInstances[1].ColorArrayRGB[0] + playerInstances[2].ColorArrayRGB[0]);
    mixedColorsArray[1] = (playerInstances[0].ColorArrayRGB[1] + playerInstances[1].ColorArrayRGB[1] + playerInstances[2].ColorArrayRGB[1]);
    mixedColorsArray[2] = (playerInstances[0].ColorArrayRGB[2] + playerInstances[1].ColorArrayRGB[2] + playerInstances[2].ColorArrayRGB[2]);

  }
  else
  {
    //something wrent wrong :p
  }

  //draw player
  if(playerCount == 1)
  {
    for(int j = 2; j >= 0; j--)
    {
      pixels.setPixelColor(playerInstances[0].DrawPosition - j,
                pixels.Color(playerInstances[0].ColorArrayRGB[0],
                             playerInstances[0].ColorArrayRGB[1],
                             playerInstances[0].ColorArrayRGB[2]));
    }
  }
  else if(playerCount > 1) //draw all players by mixing their color
  {
    for(int j = 2; j >= 0; j--)
    {
      pixels.setPixelColor(playerInstances[0].DrawPosition - j,
                pixels.Color(mixedColorsArray[0],
                             mixedColorsArray[1],
                             mixedColorsArray[2]));
    }
  }



  //draw start/finish line
  pixels.setPixelColor(startFinishLine,
                        pixels.Color(startFinishLineColorArrayRGB[0], startFinishLineColorArrayRGB[1], startFinishLineColorArrayRGB[2]));

  //set boundaries for lap flag Reset
  lapFlagResetLow  = startFinishLine + NUMPIXELS / 2 - 5;
  if(lapFlagResetLow > NUMPIXELS - 1 ) { lapFlagResetLow -= NUMPIXELS - 1;}
  lapFlagResetHigh = startFinishLine + NUMPIXELS / 2 + 5;
  if(lapFlagResetHigh > NUMPIXELS - 1 ) { lapFlagResetHigh -= NUMPIXELS - 1;}



  //draw color merge test //DEACTIVATED
  for(int i = NUMPIXELS; i < NUMPIXELS; i++)
  {
    if(i % 6 == 0) { pixels.setPixelColor(i, pixels.Color(254,0,0)); }
  }


  //draw "physics" test boundaries
  /*
  for(int i = gravityObjectsCount; i > 0; i--)
  {
    pixels.setPixelColor(gravityObjects[i-1][0], pixels.Color(0,254,0));
    pixels.setPixelColor(gravityObjects[i-1][1], pixels.Color(0,254,0));
    pixels.setPixelColor(gravityObjects[i-1][2], pixels.Color(0,254,0));
  }
  */

  pixels.show();
  gameInitDone = true;
}


//Draw players
//void draw(int playerDrawPosition, int playerLogicPosition, byte playerColorArrayRGB[])
void draw(Player &player)
{
  //Serial.println("debug draw");
  int playerDrawPositionLocal = player.DrawPosition;
  int playerLogicPosition = player.LogicPosition;
  byte playerColorArrayRGB[3];
  playerColorArrayRGB[0] = player.ColorArrayRGB[0];
  playerColorArrayRGB[1] = player.ColorArrayRGB[1];
  playerColorArrayRGB[2] = player.ColorArrayRGB[2];

  //While player real location and player drawn location differ
  while(playerDrawPositionLocal != playerLogicPosition)
  {
    //Serial.println(playerDrawPositionLocal);
    // //Serial.println(playerLogicPosition);
    //Strip End/Beginning handling
    int sternmostPixel;
    if(playerDrawPositionLocal == 0 ){ sternmostPixel = NUMPIXELS - 2; }
    else if (playerDrawPositionLocal == 1 ){ sternmostPixel = NUMPIXELS - 1; }
    else { sternmostPixel = playerDrawPositionLocal - 2; }
    //Strip End/Beginning handling
    int nextPixel;
    if(playerDrawPositionLocal == NUMPIXELS - 1 ){ nextPixel = 0; }
    else{ nextPixel = playerDrawPositionLocal + 1; }


    //if player logic position is in front of current drawn position
    if((playerDrawPositionLocal < playerLogicPosition && !(playerLogicPosition == NUMPIXELS - 1 && playerDrawPositionLocal == 0)) ||
      (playerDrawPositionLocal == NUMPIXELS - 1 && playerLogicPosition <= 3) ||
      (playerDrawPositionLocal == NUMPIXELS - 2 && playerLogicPosition <= 3) ||
      (playerDrawPositionLocal == NUMPIXELS - 3 && playerLogicPosition <= 3))
    {

      //unset last entity pixel
      //if the pixel to unset has not the player entity color
      if(pixels.getPixelColor(sternmostPixel) != pixels.Color(playerColorArrayRGB[0], playerColorArrayRGB[1], playerColorArrayRGB[2]))
      {
        //get pixelcolor
        uint32_t pixelColor = pixels.getPixelColor(sternmostPixel);

        //convert to byte array rgb values
        byte unmixedCol[3];
        unmixedCol[2] = pixelColor;
        unmixedCol[1] = pixelColor >> 8;
        unmixedCol[0] = pixelColor >> 16;

        //retract entity color
        unmixedCol[0]= unmixedCol[0] - playerColorArrayRGB[0];
        unmixedCol[1]= unmixedCol[1] - playerColorArrayRGB[1];
        unmixedCol[2]= unmixedCol[2] - playerColorArrayRGB[2];


        //set "demerged" color
        pixels.setPixelColor(sternmostPixel, pixels.Color(unmixedCol[0], unmixedCol[1], unmixedCol[2]));
      }
      else //if the pixel to unset has the same color as the player entity
      {
        pixels.setPixelColor(sternmostPixel, pixels.Color(0, 0, 0));
      }


       //set next pixel
       //check if next pixel empty
       if(pixels.getPixelColor(nextPixel) == 0)
       {
         //set playercolor
         pixels.setPixelColor(nextPixel, pixels.Color(playerColorArrayRGB[0], playerColorArrayRGB[1], playerColorArrayRGB[2]));
       }
       else //merge player color and pixel color if pixel already in use
       {
         //get pixelcolor
         uint32_t pixelColor = pixels.getPixelColor(nextPixel);

         //convert to byte array rgb values
         byte mixedCol[3];
         mixedCol[2] = pixelColor;
         mixedCol[1] = pixelColor >> 8;
         mixedCol[0] = pixelColor >> 16;

         //merge colors
         mixedCol[0] = mixedCol[0] + playerColorArrayRGB[0];
         mixedCol[1] = mixedCol[1] + playerColorArrayRGB[1];
         mixedCol[2] = mixedCol[2] + playerColorArrayRGB[2];

         //set mixed color
         pixels.setPixelColor(nextPixel, pixels.Color(mixedCol[0], mixedCol[1], mixedCol[2]));
       }


       pixels.show();
       //update playerDrawPosition
       if(playerDrawPositionLocal == NUMPIXELS - 1) { playerDrawPositionLocal = 0; }
       else
       {
        //Serial.println("DRAW IS INCREMENTING PLAYERDRAWPOSITIONLOCAL");
         playerDrawPositionLocal++;
       }
    } //if player entity has to be moved backwards
    else if(playerDrawPositionLocal > playerLogicPosition ||
            (playerDrawPositionLocal == 2 && playerLogicPosition >= NUMPIXELS - 4) ||
            (playerDrawPositionLocal == 1 && playerLogicPosition >= NUMPIXELS - 4) ||
            (playerDrawPositionLocal == 0 && playerLogicPosition >= NUMPIXELS - 4)   )
    {

            //unset front entity pixel
            //if the pixel to unset has not the player entity color
            if(pixels.getPixelColor(nextPixel - 1) != pixels.Color(playerColorArrayRGB[0], playerColorArrayRGB[1], playerColorArrayRGB[2]))
            {
              //get pixelcolor
              uint32_t pixelColor = pixels.getPixelColor(nextPixel - 1);

              //convert to byte array rgb values
              byte unmixedCol[3];
              unmixedCol[2] = pixelColor;
              unmixedCol[1] = pixelColor >> 8;
              unmixedCol[0] = pixelColor >> 16;

              //retract entity color
              unmixedCol[0] = unmixedCol[0] - playerColorArrayRGB[0];
              unmixedCol[1] = unmixedCol[1] - playerColorArrayRGB[1];
              unmixedCol[2] = unmixedCol[2] - playerColorArrayRGB[2];

              //set "demerged" color
              pixels.setPixelColor(nextPixel - 1, pixels.Color(unmixedCol[0], unmixedCol[1], unmixedCol[2]));
            }
            else //if the pixel to unset has the same color as the player entity
            {
              pixels.setPixelColor(nextPixel - 1, pixels.Color(0, 0, 0));
            }


             //set next pixel in opposite race direction
             //check if next pixel empty
             if(pixels.getPixelColor(sternmostPixel - 1) == 0)
             {
               //set playercolor
               pixels.setPixelColor(sternmostPixel - 1, pixels.Color(playerColorArrayRGB[0], playerColorArrayRGB[1], playerColorArrayRGB[2]));
             }
             else //merge player color and pixel color if pixel already in use
             {
               //get pixelcolor
               uint32_t pixelColor = pixels.getPixelColor(sternmostPixel - 1);

               //convert to byte array rgb values
               byte mixedCol[3];
               mixedCol[2] = pixelColor;
               mixedCol[1] = pixelColor >> 8;
               mixedCol[0] = pixelColor >> 16;

               //merge colors
               mixedCol[0] = mixedCol[0] + playerColorArrayRGB[0];
               mixedCol[1] = mixedCol[1] + playerColorArrayRGB[1];
               mixedCol[2] = mixedCol[2] + playerColorArrayRGB[2];

               //set mixed color
               pixels.setPixelColor(sternmostPixel - 1, pixels.Color(mixedCol[0], mixedCol[1], mixedCol[2]));
             }


             pixels.show();
             //update playerDrawPosition
             if(playerDrawPositionLocal == 0) { playerDrawPositionLocal = NUMPIXELS - 1; }
             else
             {
               playerDrawPositionLocal--;
             }
    }
    //remove this line for fancy bug :p
    player.DrawPosition = playerDrawPositionLocal;
  }
}


void update(Player &player)
{
    //If player can still gain speed
    if(player.Speed < MAX_SPEED)
    {
      if( digitalRead(player.buttonPin) == 1 && player.buttonIsDown == false)
      {
        //Set flag that button is down
        player.buttonIsDown = true;
        player.Speed++;
        // Just for debugging: player.LogicPosition++;

        //Reset deceleration multiplier if player uses button
        if(player.DecelerationMultiplier > 1) {player.DecelerationMultiplier = 1.0;}
      }
      else if(digitalRead(player.buttonPin) == 0 && player.buttonIsDown == true)
      {
        player.buttonIsDown = false;
      }
      else if(digitalRead(player.buttonPin) == 0 && player.buttonIsDown == false && player.DecelerationMultiplier < 10) //User stopped pressing the button
      {
        //add to deceleration multiplier so car gets slow quicker the longer user doesnt press the button
        //should help with long "roll out" on high velocity
        player.DecelerationMultiplier += 0.5;
       }
     }

    //evaluate speed and update player position
    //checks if player moves and how strong in either direction
    if(player.Speed >= SPEED90PERCENT || -(player.Speed) >= SPEED90PERCENT)
    {
      if(player.Speed > 0) //player moves forward
      {
        player.LogicPosition += 4;

        if(player.LogicPosition > NUMPIXELS - 1)
        {
          if(player.LogicPosition >= NUMPIXELS) { player.LogicPosition -= NUMPIXELS;}
          /*else if(player.LogicPosition == 301) { player.LogicPosition = 1;}
          else if(player.LogicPosition == 302) { player.LogicPosition = 2;}
          else if(player.LogicPosition == 303) { player.LogicPosition = 3;}*/
        }
      }
      else //player moves backward
      {
        player.LogicPosition -= 4;

        if(player.LogicPosition < 0)
        {
          if(player.LogicPosition <= -1) { player.LogicPosition += NUMPIXELS;}
          /*else if(player.LogicPosition == -2) { player.LogicPosition = 298;}
          else if(player.LogicPosition == -3) { player.LogicPosition = 297;}
          else if(player.LogicPosition == -4) { player.LogicPosition = 296;}*/
        }
      }
    }
    else if(player.Speed >= SPEED60PERCENT || -(player.Speed) >= SPEED60PERCENT)
    {
      if(player.Speed > 0)
      {
        player.LogicPosition += 3;

        if(player.LogicPosition > NUMPIXELS - 1)
        {
          if(player.LogicPosition >= NUMPIXELS) { player.LogicPosition -= NUMPIXELS;}
          /*else if(player.LogicPosition == 301) { player.LogicPosition = 1;}
          else if(player.LogicPosition == 302) { player.LogicPosition = 2;}*/
        }
      }
      else //player moves backward
      {
        player.LogicPosition -= 3;


        if(player.LogicPosition < 0)
        {
          if(player.LogicPosition <= -1) { player.LogicPosition += NUMPIXELS;}
          /*else if(player.LogicPosition == -2) { player.LogicPosition = 298;}
          else if(player.LogicPosition == -3) { player.LogicPosition = 297;}*/
        }
      }
    }
    else if(player.Speed >= SPEED30PERCENT || -(player.Speed) >= SPEED30PERCENT)
    {
      if(player.Speed > 0)
      {
        player.LogicPosition += 2;

        if(player.LogicPosition > NUMPIXELS - 1)
        {
          if(player.LogicPosition >= NUMPIXELS) { player.LogicPosition -= NUMPIXELS;}
        /*  else if(player.LogicPosition == 301) { player.LogicPosition = 1;} */
        }
      }
      else //player moves backward
      {
        player.LogicPosition -= 2;


        if(player.LogicPosition < 0)
        {
          if(player.LogicPosition <= -1) { player.LogicPosition += NUMPIXELS;}
        /*  else if(player.LogicPosition == -2) { player.LogicPosition = 298;} */
        }
      }
    }
    else if(player.Speed >= 1 || -(player.Speed) >= 1)
    {
      if(player.Speed > 0)
      {
        player.LogicPosition += 1;

        if(player.LogicPosition > NUMPIXELS - 1)
        {
          if(player.LogicPosition == NUMPIXELS) { player.LogicPosition -= NUMPIXELS;}
        }
      }
      else //if player moving backwards
      {
        player.LogicPosition -= 1;

        if(player.LogicPosition < 0)
        {
          if(player.LogicPosition == -1) { player.LogicPosition -= NUMPIXELS;}
        }
      }
    }


  //slowly loose speed stat
  if(millis() - player.lastSpeedDecay > speedDecayInterval && !player.skipSpeedDecayOnce)
  {

    if (player.Speed >= 1)
    {
      float speedDecrease = (float)player.Speed * player.Speed *  0.00004 + 0.15;
      speedDecrease = speedDecrease * player.DecelerationMultiplier;
      player.Speed -= speedDecrease;
    }
    else if(player.Speed <= -1)
    {
      float speedDecrease = (float)player.Speed * player.Speed *  0.00004 + 0.15;
      speedDecrease = speedDecrease * player.DecelerationMultiplier;
      player.Speed -= -(speedDecrease);
    }
    player.lastSpeedDecay = millis();
  }
  if(player.skipSpeedDecayOnce){player.skipSpeedDecayOnce = false;}



    //check for crossing finish line
    if(player.LogicPosition >= startFinishLine && player.crossedLine == false)
    {
      player.crossedLine = true;

      //save total time
      player.LapTimesArray[player.LapCounter] = millis() / (float)1000;

      //if this is a complete round save the lap duration
      //in ms
      if(player.LapCounter > 0)
      {
        player.LapTimesArray[player.LapCounter] -= player.LapTimesArray[player.LapCounter - 1];

        //check if this was the fastest lap
        if(player.bestLapTime > player.LapTimesArray[player.LapCounter] || player.bestLapTime == 0) { player.bestLapTime = player.LapTimesArray[player.LapCounter]; }
      }

      //if this was not the final lap
      if(player.LapCounter < maxLaps)
      {
        player.LapCounter++;
      }
      else //this was the final lap
      {
        //set flag that triggers code block in update()
        player.reachedMaxLaps = true;
      }
    }
    else if(player.LogicPosition > lapFlagResetLow && player.LogicPosition < lapFlagResetHigh && player.crossedLine == true)
    {
      finishLineHelperFlag = true;
    }
    else if(player.LogicPosition < startFinishLine && player.crossedLine == true && finishLineHelperFlag == true)
    {
      finishLineHelperFlag = false;
      player.crossedLine = false;
    }

    //deactivate player controls/update after final lap
    if(player.isActive && player.reachedMaxLaps)
    {
      player.isActive = false;

      //if the player is first to reach max laps
      //color the track in player color and set bool winner
      if (!gameWon)
      {
        gameWon = true;
        player.isTheWinner = true;

        byte dimmedWinnerColorArray[3];

        for(int i = 2; i >= 0; i--)
        {
          dimmedWinnerColorArray[i] = player.ColorArrayRGB[i] / 8;
        }

        uint32_t dimmedWinnerColor = pixels.Color(dimmedWinnerColorArray[0], dimmedWinnerColorArray[1], dimmedWinnerColorArray[2]);

        pixels.fill(dimmedWinnerColor);
        pixels.show();
      }
    }

    /*//////////////Gravity Objects\\\\\\\\\\\\\\\\
    //decreases speed stat while going uphill and increases speed stat while going downhill
    //not manipulating speed stat while exactly on top of the rise
    //if the player is between rise start point and highest point of the rise (uphill)*/

    //if player doesnt have max speed (positiv or negative)
    if(!(player.Speed >= MAX_SPEED) && !(-(player.Speed) >= MAX_SPEED))
    {
      //loop through gravity objects
      for(int i = gravityObjectsCount; i > 0; i--)
      {
        if(player.LogicPosition >= gravityObjects[i - 1][0] && player.LogicPosition < gravityObjects[i - 1][1])
        {
          float speedDecrease = (float)0.05 * gravityObjects[i - 1][3];
          player.Speed -= speedDecrease;

          if(player.Speed < 0 && player.Speed > -1.0){player.Speed = -1;}
          if(player.DecelerationMultiplier > 1) {player.DecelerationMultiplier -= 1.0;}

          player.skipSpeedDecayOnce = true;
        }//else if the player is between highest point and rise ending (downhill)
        else if(player.LogicPosition > gravityObjects[i - 1][1] && player.LogicPosition <= gravityObjects[i - 1][2])
        {
          float speedIncrease = (float)0.05 * gravityObjects[i - 1][3];
          player.Speed += speedIncrease;

          if(player.Speed > 0 && player.Speed < 1.0){player.Speed = 1;}
          if(player.DecelerationMultiplier > 1) {player.DecelerationMultiplier -= 1.0;}

          player.skipSpeedDecayOnce = true;
        }
      }
    }

}

float bestLapTime(int playerNumber)
{
  float bestLap = 9999;

  if(playerInstances[playerNumber -1].LapTimesArray[1] != 0)
  {
    for(int i =  maxLaps; i > 0; i--)
    {
      if(playerInstances[playerNumber-1].LapTimesArray[i] > 0 && playerInstances[playerNumber-1].LapTimesArray[i] / 1000 < bestLap)
      {
        bestLap = playerInstances[playerNumber-1].LapTimesArray[i] / (float)1000;
      }
    }
  }
  else
  {
    bestLap = 0;
  }
 //Serial.print("bestLapTime() returns: ");
 //Serial.println(bestLap);
  return bestLap;
}

void changeColors(String colorPlayerOne, String colorPlayerTwo)
{
  if(colorPlayerOne == "rot" && colorPlayerTwo == "blau")
  {
    menuPlayerOneColor[0] = 254;
    menuPlayerOneColor[1] = 0;
    menuPlayerOneColor[2] = 0;
    playerInstances[0].ColorString = "Rot";

    menuPlayerTwoColor[0] = 0;
    menuPlayerTwoColor[1] = 0;
    menuPlayerTwoColor[2] = 254;
    playerInstances[1].ColorString = "Blau";

  }
  else if(colorPlayerOne == "blau" && colorPlayerTwo == "gelb")
  {
    menuPlayerOneColor[0] = 0;
    menuPlayerOneColor[1] = 0;
    menuPlayerOneColor[2] = 254;
    playerInstances[0].ColorString = "Blau";


    menuPlayerTwoColor[0] = 254;
    menuPlayerTwoColor[1] = 254;
    menuPlayerTwoColor[2] = 0;
    playerInstances[1].ColorString = "Gelb";

  }
  else if(colorPlayerOne == "rot" && colorPlayerTwo == "gelb")
  {
    menuPlayerOneColor[0] = 254;
    menuPlayerOneColor[1] = 0;
    menuPlayerOneColor[2] = 0;
    playerInstances[0].ColorString = "Rot";


    menuPlayerTwoColor[0] = 254;
    menuPlayerTwoColor[1] = 254;
    menuPlayerTwoColor[2] = 0;
    playerInstances[1].ColorString = "Gelb";

  }
  else if(colorPlayerOne == "random" && colorPlayerTwo == "random")
  {
    //pin 36 = not connected analog pin for random noise
    randomSeed(analogRead(36));

    for(int i = 2; i >= 0; i--)
    {
      menuPlayerOneColor[i] = random(127) * 2;
    }
    playerInstances[0].ColorString = "???";


    for(int i = 2; i >= 0; i--)
    {
      menuPlayerTwoColor[i] = random(127) * 2;
    }
    playerInstances[1].ColorString = "???";


  }
  menuColorChosen=true;
}

void startOnePlayerGame()
{
  //set player count and ingame == true
  playerCount = 1;
  inGame = true;
}

void startTwoPlayerGame()
{
  playerCount = 2;
  inGame = true;
}

void startThreePlayerGame()
{
  playerCount = 3;
  inGame = true;
}

void menuloop()
{
 if(gamestate == true && multiplayer == true && thirdPlayer == true)
 {
   player1screen();
   player2screen();
   if(inGame == false)
   {
     startThreePlayerGame();
    //Serial.println("STARTED THREE PLAYER GAME");
   }
 }
 else if(gamestate == true && multiplayer == true)
 {
      player1screen();
      player2screen();
      if(inGame == false)
      {
        startTwoPlayerGame();
      // Serial.println("STARTED TWO PLAYER GAME");
      }
 }
 else if(gamestate == true && multiplayer == false)
 {
      player1screen();
      if(inGame == false)
      {
        startOnePlayerGame();
       //Serial.println("STARTED ONE PLAYER GAME");
      }

 }
else
 {
   display12idle();
   display1menue();
 }
}

void display1setup(){
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  display.clearDisplay();
  display.drawBitmap(0,0, pixelartbztg, 128, 64, 1);
  display.display();
  }

void display2setup(){
  display2.begin(SSD1306_SWITCHCAPVCC, 0x3D);
  display2.clearDisplay();
  display2.drawBitmap(0,0, pixelartbztg, 128, 64, 1);
  display2.display();
  }

void display12idle(){
  display2.clearDisplay();
  display2.drawBitmap(0,0, wartenart1, 128, 64, 1);
  display2.display();
}

void display1menue(){
 while(m == 1 && w == 1 || m < 1 && w == 1 || m == 6 && w == 1|| m > 6 && w == 1)//start
  {
  display.clearDisplay();
  delay(300);
  display.drawBitmap(0,0, menuart7, 128, 64, 1);
  display.display();
  display.clearDisplay();
  delay(300);
  display.drawBitmap(0,0, menuart2, 128, 64, 1);
  display.display();
  resetcount();
  abfrage0();
}
while(m == 1 && w > 1|| m < 1 && w > 1 || m == 6 && w > 1 || m > 6 && w > 1)//start
  {
  w = 1;
}

 while(m == 2 && w == 1)//multispieler
{
  display.clearDisplay();
  delay(300);
  display.drawBitmap(0,0, menuart8, 128, 64, 1);
  display.display();
  display.clearDisplay();
  delay(300);
  display.drawBitmap(0,0, menuart3, 128, 64, 1);
  display.display();
  resetcount();
  abfrage();
}


 while(m == 2 && w == 2 && s == 1)//multispieler JA
{
  delay(300);
  display.clearDisplay();
  display.drawBitmap(0,0, spielenmenuart2, 128, 64, 1);
  display.display();
  abfrage2();
}

 while(m == 2 && w == 2 && s == 0)//multispieler NEIN
{
  delay(300);
  display.clearDisplay();
  display.drawBitmap(0,0, spielenmenuart3, 128, 64, 1);
  display.display();
  abfrage2();
}

while(m == 2 && w == 3)//mutliplayer Logo
{
  delay(300);
  display.clearDisplay();
  display.drawBitmap(0,0, logoart1, 128, 64, 1);
  display.display();
  gamestate = true;
  multiplayer = true;
  m = 0;
}

while(m == 3 && w == 1)//einzelspieler
{
  display.clearDisplay();
  delay(300);
  display.drawBitmap(0,0, menuart9, 128, 64, 1);
  display.display();
  display.clearDisplay();
  delay(300);
  display.drawBitmap(0,0, menuart4, 128, 64, 1);
  display.display();
  resetcount();
  abfrage();
}

 while(m == 3 && w == 2 && s == 1)//einzelspieler JA
  {
  delay(300);
  display.clearDisplay();
  display.drawBitmap(0,0, spielenmenuart2, 128, 64, 1);
  display.display();
  abfrage2();
}
 while(m == 3 && w == 2 && s == 0)//einzelspieler NEIN
  {
  delay(300);
  display.clearDisplay();
  display.drawBitmap(0,0, spielenmenuart3, 128, 64, 1);
  display.display();
  abfrage2();
}
while(m == 3 && w == 3)//einzelspielerLogo
  {
  delay(300);
  display.clearDisplay();
  display.drawBitmap(0,0, logoart1, 128, 64, 1);
  display.display();
  gamestate = true;
  multiplayer = false;
  m = 0;

}

while(m == 4 && w == 1)//optionen
  {
  display.clearDisplay();
  delay(300);
  display.drawBitmap(0,0, menuart10, 128, 64, 1);
  display.display();
  display.clearDisplay();
  delay(300);
  display.drawBitmap(0,0, menuart5, 128, 64, 1);
  display.display();
  n = 1;
  resetcount();
  abfrage();
}

 while(   m == 4 && w == 2 && n == 1
       || m == 4 && w == 2 && n < 1
       || m == 4 && w == 2 && m == 5
       || m == 4 && w == 2 && n > 5)//optionenscreen1
  {
  delay(300);

  //display.clearDisplay();
  //display.drawBitmap(0,0, optionenart1, 128, 64, 1);
  //display.display();
  //resetcount2();
  //abfrage4();
  gamestate = true;
  multiplayer = true;
  thirdPlayer = true;
  m = 0;
}

 while(m == 4 && w == 2 && n == 2)//optionenscreen2
  {
  delay(300);
  display.clearDisplay();
  display.drawBitmap(0,0, optionenart2, 128, 64, 1);
  display.display();
  resets();
  abfrage4();
}

 while(m == 4 && w == 2  && n == 3)//optionenscreen3
  {
  delay(300);
  display.clearDisplay();
  display.drawBitmap(0,0, optionenart3, 128, 64, 1);
  display.display();
  resets();
  abfrage4();
}

 while(m == 4 && w == 2 && n == 4)//optionenscreen4
  {
  delay(300);
  display.clearDisplay();
  display.drawBitmap(0,0, optionenart4, 128, 64, 1);
  display.display();
  resets();
  abfrage4();
}

 while(m == 4 && w == 2 && n == 5)//optionenscreen5
  {
  delay(300);
  display.clearDisplay();
  display.drawBitmap(0,0, optionenart5, 128, 64, 1);
  display.display();
  resets();
  abfrage4();
}

 while(m == 4 && w == 3 && s == 1)//sicher JA
  {
  delay(300);
  display.clearDisplay();
  display.drawBitmap(0,0, fertigmenuart2, 128, 64, 1);
  display.display();
  abfrage2();
}

 while(m == 4 && w == 3 && s == 0)//sicher Nein
  {
  delay(300);
  display.clearDisplay();
  display.drawBitmap(0,0, fertigmenuart3, 128, 64, 1);
  display.display();
  abfrage2();
}

while(m == 4 && w == 4 && s == 1)//logo mit speichern
  {
  delay(300);
  display.clearDisplay();
  display.drawBitmap(0,0, logoart1, 128, 64, 1);
  display.display();

  if(n == 2)        {changeColors("rot", "blau");}
  else if(n == 3)   {changeColors("blau", "gelb");}
  else if(n == 4)   {changeColors("rot", "gelb");}
  else if(n == 5)   {changeColors("random", "random");}
  // changeColors("red", "blue");(if n2 = farbe rot blau ,n3 blau gelb ,n4 rot gelb, n5 ???;
    s = 1;
    m = 1;
    w = 1;
    n = 1;
    }


while(m == 5 && w == 1)//infos
  {
  display.clearDisplay();
  delay(300);
  display.drawBitmap(0,0, menuart11, 128, 64, 1);
  display.display();
  display.clearDisplay();
  delay(300);
  display.drawBitmap(0,0, menuart6, 128, 64, 1);
  display.display();
  resetcount();
  abfrage();
}

 while(m == 5 && w == 2 && s == 1)//infobase
  {
  delay(300);
  display.clearDisplay();
  display.drawBitmap(0,0, infoart2, 128, 64, 1);
  display.display();
  abfrage3();
}

 while(m == 5 && w == 2 && s == 0)//inforeturn
  {
  delay(300);
  display.clearDisplay();
  display.drawBitmap(0,0, infoart3, 128, 64, 1);
  display.display();
  abfrage3();
}
}

void player1screen(){
  display.clearDisplay();
  display.setFont();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  int x = 1; int y = 1;
  display.setCursor(x,y);
  display.print("Speed");
  x = 80; y = 1;
  display.setCursor(x,y);
  display.print("=");
  x = 90; y = 1;
  display.setCursor(x,y);
  g = playerInstances[0].Speed;
 //Serial.print("player1screen() Speed: ");
 //Serial.println(g);
  display.print(g);

  x = 1; y = 10;
  display.setCursor(x,y);
  display.print("Runde");
  x = 80; y = 10;
  display.setCursor(x,y);
  display.print("=");
  x = 90; y = 10;
  display.setCursor(x,y);
  r = playerInstances[0].LapCounter;
 //Serial.print("player1screen() LapCounter: ");
 //Serial.println(r);
  display.print(r);

  x = 1; y = 19;
  display.setCursor(x,y);
  display.print("Rekord");
  x = 80; y = 19;
  display.setCursor(x,y);
  display.print("=");
  x = 90; y = 19;
  display.setCursor(x,y);
  rz = playerInstances[0].bestLapTime;
 //Serial.print("player1screen() BestLap: ");
 //Serial.println(rz);
  display.print(rz);
  display.display();

  x = 1; y = 28;
  display.setCursor(x,y);
  display.print("Farbe");
  x = 80; y = 28;
  display.setCursor(x,y);
  display.print("=");
  x = 90; y = 28;
  display.setCursor(x,y);
  String spieler1farbe = playerInstances[0].ColorString;
  display.print(spieler1farbe);
  display.display();

  }

void player2screen(){
  display2.clearDisplay();
  display2.setFont();
  display2.setTextSize(1);
  display2.setTextColor(WHITE);
  int x = 1; int y = 1;
  display2.setCursor(x,y);
  display2.print("Speed");
  x = 80; y = 1;
  display2.setCursor(x,y);
  display2.print("=");
  x = 90; y = 1;
  display2.setCursor(x,y);
  g2 = playerInstances[1].Speed;
  display2.print(g2);

  x = 1; y = 10;
  display2.setCursor(x,y);
  display2.print("Runde");
  x = 80; y = 10;
  display2.setCursor(x,y);
  display2.print("=");
  x = 90; y = 10;
  display2.setCursor(x,y);
  r2 = playerInstances[1].LapCounter;
  display2.print(r2);

  x = 1; y = 19;
  display2.setCursor(x,y);
  display2.print("Rekord");
  x = 80; y = 19;
  display2.setCursor(x,y);
  display2.print("=");
  x = 90; y = 19;
  display2.setCursor(x,y);
  rz2 = playerInstances[1].bestLapTime;
  display2.print(rz2);
  display2.display();

  x = 1; y = 28;
  display2.setCursor(x,y);
  display2.print("Farbe");
  x = 80; y = 28;
  display2.setCursor(x,y);
  display2.print("=");
  x = 90; y = 28;
  display2.setCursor(x,y);
  String spieler2farbe = playerInstances[1].ColorString;
  display2.print(spieler2farbe);
  display2.display();
  }

  void readButtons(){
    readingA = digitalRead(buttonA);
    readingB = digitalRead(buttonB);
    readingC = digitalRead(buttonC);
  }
  void button (){

    readButtons();

    if (readingA != lastButtonStateA) {
      lastDebounceTime = millis();
    }
    if (readingB != lastButtonStateB) {
      lastDebounceTime = millis();
    }
    if (readingC != lastButtonStateC) {
      lastDebounceTime = millis();
    }

    if ((millis() - lastDebounceTime) > debounceDelay) {
      if (readingA != buttonStateA) {
        buttonStateA = readingA;
      if (readingB != buttonStateB) {
        buttonStateB = readingB;
      if (readingC != buttonStateC) {
        buttonStateC = readingC;
        }
      }
    }
    lastButtonStateA = readingA;
    lastButtonStateB = readingB;
    lastButtonStateC = readingC;
   }
  }

  void resets(){
    if(s != 1) { s = 1;}
    }

  void resetcount(){
    if(m > 6) { m = 1;}
    if(m < 1) { m = 6;}
    resets();
    }

   void resetcount2(){
    if(n > 5) { n = 1;}
    if(n < 1) { n = 5;}
    resets();
    }


  void abfrage0()
  {
    button();
    if (readingA == 1)            m = m + 1;
    if (readingB == 1)           m = m - 1;
  }
  void abfrage()
  {
    abfrage0();
    if (readingC == 1)           w = w + 1;
  }

  void abfrage2()
  {
    button();
    if (readingA == 1)           s = 0;
    if (readingB == 1)           s = 1;
    if (readingC == 1 && s == 1) w = w + 1;
    if (readingC == 1 && s == 0) w = w - 1;
    }

  void abfrage3()
  {
    button();
    if (readingA == 1)           s = 0;
    if (readingB == 1)           s = 1;
    if (readingC == 1 && s == 0) w = w - 1;
  }

  void abfrage4()
  {
    button();
    if (readingA == 1)           n = n + 1;
    if (readingB == 1)           n = n - 1;
    if (readingC == 1)           w = w + 1;
  }

void loop()
{
  //if the game has been started
  if(inGame == true)
  {
    if(!gameInitDone) //initialize game
    {
      initGame(playerCount);
      delay(100);

     //Serial.println("GAME INIT DONE");
    }

    //gameloop
    //every loopInterval ms (standard: 32) every player
    //gets drawn and updated
    if(millis() - lastLoop > loopInterval)
    {
      for(int i = playerCount; i > 0; i--)
      {
        if(playerInstances[i-1].isActive)
        {
          draw(playerInstances[i-1]);
          update(playerInstances[i-1]);
        }
      }
      lastLoop = millis();
    }
  }

  if(inGame == false)
  {
    pixels.clear();
    pixels.show();
  }


  if(millis() - menuLastLoop > menuLoopInterval)
  {
    menuloop(); // do menu stuff
    menuLastLoop = millis();
  }
}
